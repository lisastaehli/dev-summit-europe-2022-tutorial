"use strict";(self.webpackChunkberlin_equal_street_names=self.webpackChunkberlin_equal_street_names||[]).push([[4863],{34863:(e,t,n)=>{n.r(t),n.d(t,{SceneLayerSnappingSourceWorker:()=>g,default:()=>m});var s=n(36663),i=n(61681),o=n(78668),d=(n(13802),n(7283),n(7753),n(39994),n(33156),n(40266)),c=n(6766),a=n(8909),r=n(56215),u=n(91917),h=n(17519),p=n(20766),_=n(5843);let g=class{constructor(){this._idToComponent=new Map,this._components=new p.Z((e=>e.bounds)),this._edges=new p.Z((e=>e.bounds)),this._tmpLineSegment=(0,r.Ue)(),this._tmpP1=(0,a.c)(),this._tmpP2=(0,a.c)(),this._tmpP3=(0,a.c)(),this.remoteClient=null}async fetchCandidates(e,t){await Promise.resolve(),(0,o.k_)(t),await this._ensureEdgeLocations(e,t);const n=[];return this._edges.forEachNeighbor((t=>this._addCandidates(e,t,n)),e.bounds),{result:{candidates:n}}}async _ensureEdgeLocations(e,t){const n=[];if(this._components.forEachNeighbor((e=>{if((0,i.Wi)(e.info)){const{id:t,uid:s}=e;n.push({id:t,uid:s})}}),e.bounds),!n.length)return;const s={components:n},o=await this.remoteClient.invoke("fetchAllEdgeLocations",s,(0,i.Pt)(t,{}));for(const e of o.components)this._setFetchEdgeLocations(e)}async add(e){const t=new l(e.id,e.bounds);return this._idToComponent.set(t.id,t),this._components.add([t]),{result:{}}}async remove(e){const t=this._idToComponent.get(e.id);if(t){const e=[];this._edges.forEachNeighbor((n=>{n.component===t&&e.push(n)}),t.bounds),this._edges.remove(e),this._components.remove([t]),this._idToComponent.delete(t.id)}return{result:{}}}_setFetchEdgeLocations(e){const t=this._idToComponent.get(e.id);if((0,i.Wi)(t)||e.uid!==t.uid)return;const n=_.extractComponentsEdgeLocationsLayout.createView(e.locations),s=new Array(n.count),o=(0,a.c)(),d=(0,a.c)();for(let i=0;i<n.count;i++){const a=(0,u.c)(),r=(0,u.g)(a);n.position0.getVec(i,o),n.position1.getVec(i,d),(0,c.C)(r,r,o,.5),(0,c.C)(r,r,d,.5),(0,c.a)(r,r,e.origin),a[3]=(0,c.i)(r,o);const h=new f(t,i,a);s[i]=h}this._edges.add(s);const{objectIds:r,origin:h}=e;t.info={locations:n,objectIds:r,origin:h}}_addCandidates(e,t,n){const{locations:s,origin:i,objectIds:o}=t.component.info,d=s.position0.getVec(t.index,this._tmpP1),a=s.position1.getVec(t.index,this._tmpP2);(0,c.a)(d,d,i),(0,c.a)(a,a,i);const r=o[s.componentIndex.get(t.index)];this._addEdgeCandidate(e,r,d,a,n),this._addVertexCandidate(e,r,d,n),this._addVertexCandidate(e,r,a,n)}_addEdgeCandidate(e,t,n,s,i){if(!(e.types&h.r.EDGE))return;const o=(0,u.g)(e.bounds),d=(0,r.zk)(n,s,this._tmpLineSegment),p=(0,r.nF)(d,o,this._tmpP3);if(!(0,u.m)(e.bounds,p))return null;i.push({type:"edge",objectId:t,target:(0,a.a)(p),distance:(0,c.i)(o,p),start:(0,a.a)(n),end:(0,a.a)(s)})}_addVertexCandidate(e,t,n,s){if(!(e.types&h.r.VERTEX))return;const i=(0,u.g)(e.bounds);if(!(0,u.m)(e.bounds,n))return null;s.push({type:"vertex",objectId:t,target:(0,a.a)(n),distance:(0,c.i)(i,n)})}};function m(){return new g}g=(0,s._)([(0,d.j)("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorker")],g);class l{constructor(e,t){this.id=e,this.bounds=t,this.info=null,this.uid=++l.uid}}l.uid=0;class f{constructor(e,t,n){this.component=e,this.index=t,this.bounds=n}}}}]);
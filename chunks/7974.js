"use strict";(self.webpackChunkberlin_equal_street_names=self.webpackChunkberlin_equal_street_names||[]).push([[7974],{47974:(e,t,i)=>{i.r(t),i.d(t,{default:()=>Qe});var s=i(36663),r=i(80020),n=i(98549),a=i(70375),o=i(61681),l=i(15842),c=i(78668),h=i(76868),u=i(81977),f=(i(7753),i(39994)),d=i(7283),p=i(79438),m=i(34248),y=i(40266),g=i(38481),x=i(27668),b=i(63989),w=(i(91957),i(66341)),I=i(13802),v=i(42730),_=i(35925),S=i(20692),C=i(51599),T=i(59510),R=i(29410),k=i(81590),P=i(76386),M=i(7928),B=i(23872),D=i(32498),F=i(88243),O=i(91772),z=i(14685);const E=I.Z.getLogger("esri.layers.mixins.ImageryTileMixin"),A=e=>{let t=class extends e{constructor(){super(...arguments),this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.fullExtent=null,this.interpolation="nearest",this.multidimensionalDefinition=null,this.raster=null,this.rasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.tileInfo=null,this.symbolizer=null}set url(e){this._set("url",(0,S.Nm)(e,E))}set renderer(e){this._set("renderer",e),this.updateRenderer()}async convertVectorFieldData(e,t){if((0,o.Wi)(e))return null;const i=this._rasterJobHandler.instance,s=this.rasterInfo.dataType;return i?i.convertVectorFieldData({pixelBlock:e,dataType:s},t):(0,M.KC)(e,s)}async createFlowMesh(e,t){const i=this._rasterJobHandler.instance;return i?i.createFlowMesh(e,t):(0,F.GE)(e.meshType,e.simulationSettings,e.flowData,(0,o.pC)(t.signal)?t.signal:(new AbortController).signal)}normalizeRasterFetchOptions(e){const{multidimensionalInfo:t}=this.rasterInfo;if((0,o.Wi)(t))return e;let i=e.multidimensionalDefinition||this.multidimensionalDefinition;!(0,o.Wi)(i)&&i.length||(i=(0,P.Tj)(this.raster.rasterInfo));const s=e.timeExtent||this.timeExtent;if((0,o.pC)(i)&&(0,o.pC)(s)&&((0,o.pC)(s.start)||(0,o.pC)(s.end))){i=i.map((e=>e.clone()));const r=t.variables.find((({name:e})=>e===i[0].variableName))?.dimensions?.find((({name:e})=>"StdTime"===e)),n=i.find((({dimensionName:e})=>"StdTime"===e));if(!r||!n)return{...e,multidimensionalDefinition:null};const{start:a,end:l}=s,c=(0,o.Wi)(a)?null:a.getTime(),h=(0,o.Wi)(l)?null:l.getTime(),u=c??h,f=h??c;if((0,o.pC)(r.values)){const e=r.values.filter((e=>{if(Array.isArray(e)){if(u===f)return e[0]<=u&&e[1]>=u;const t=e[0]<=u&&e[1]>u||e[0]<f&&e[1]>=f,i=e[0]>=u&&e[1]<=f||e[0]<u&&e[1]>f;return t||i}return u===f?e===u:e>=u&&e<=f}));if(e.length){const t=e.sort(((e,t)=>u===f?(e[0]??e)-(t[0]??t):Math.abs((e[1]??e)-f)-Math.abs((t[1]??t)-f)))[0];n.values=[t]}else i=null}else if(r.hasRegularIntervals&&r.extent){const[e,t]=r.extent;u>t||f<e?i=null:n.values=u===f?[u]:[Math.max(e,u),Math.min(t,f)]}}return{...e,multidimensionalDefinition:i}}async updateRenderer(){if(!this.loaded)return;if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(this.renderer))return;const e=this._rasterJobHandler.instance;e&&(this.symbolizer.rendererJSON=(0,B.ol)(this.renderer.toJSON()),this.symbolizer.bind(),await e.updateSymbolizer(this.symbolizer),this._cachedRendererJson=this.renderer.toJSON())}async applyRenderer(e,t){const i=e&&e.pixelBlock;if(!((0,o.pC)(i)&&i.pixels&&i.pixels.length>0))return null;let s;await this.updateRenderer();const r=this._rasterJobHandler.instance,{bandIds:n}=this;return s=r?await r.symbolize({...e,simpleStretchParams:t,bandIds:n}):this.symbolizer.symbolize({...e,simpleStretchParams:t,bandIds:n}),s}getTileUrl(e,t,i){return"RasterTileServer"===this.raster.datasetFormat?`${this.url}/tile/${e}/${t}/${i}`:""}getCompatibleTileInfo(e,t,i=!1){if(!this.loaded||(0,o.Wi)(t))return null;if(i&&e.equals(this.spatialReference))return this.tileInfo;const s=(0,_.C5)(e);return k.Z.create({size:256,spatialReference:e,origin:s?{x:s.origin[0],y:s.origin[1]}:{x:t.xmin,y:t.ymax}})}getCompatibleFullExtent(e){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(e)||(this._compatibleFullExtent=this.raster.computeExtent(e)),this._compatibleFullExtent):null}async fetchTile(e,t,i,s={}){if(s.requestAsImageElement){const r=this.getTileUrl(e,t,i);return(0,w.default)(r,{responseType:"image",query:{...this.refreshParameters,...this.raster.ioConfig.customFetchParameters},signal:s.signal}).then((e=>e.data))}if((0,o.pC)(this.rasterInfo.multidimensionalInfo)&&(s=this.normalizeRasterFetchOptions(s),(0,o.Wi)(s.multidimensionalDefinition))){const r=s.tileInfo||this.rasterInfo.storageInfo.tileInfo;return{extent:this.raster.getTileExtentFromTileInfo(e,t,i,r),pixelBlock:null}}return await this._initJobHandler(),"raster-shaded-relief"===this.renderer.type&&(s={...s,buffer:{cols:1,rows:1}}),this.raster.fetchTile(e,t,i,s)}async fetchPixels(e,t,i,s={}){return(0,o.pC)(this.rasterInfo.multidimensionalInfo)&&(s=this.normalizeRasterFetchOptions(s),(0,o.Wi)(s.multidimensionalDefinition))?{extent:e,pixelBlock:null}:(await this._initJobHandler(),this.raster.fetchPixels(e,t,i,s))}async identify(e,t={}){return!(0,o.pC)(this.rasterInfo.multidimensionalInfo)||this.rasterInfo.hasMultidimensionalTranspose&&((0,P.WU)(t.multidimensionalDefinition)||t.transposedVariableName||t.timeExtent)||(t=this.normalizeRasterFetchOptions(t),!(0,o.Wi)(t.multidimensionalDefinition))?this.raster.identify(e,t):{location:e,value:null}}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){const e=this.rasterInfo.multidimensionalInfo;if((0,o.Wi)(e)||"standard-time"!==this.rasterInfo.dataType)return!1;const t=this.multidimensionalDefinition[0]?.variableName;return e.variables.some((e=>e.name===t&&e.dimensions.some((e=>"StdTime"===e.name))))}getStandardTimeValue(e){return new Date(24*(e-25569)*3600*1e3).toString()}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=(0,P.Tj)(this.raster.rasterInfo)),this._configDefaultRenderer()}_initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new R.Z;return this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{this._rasterJobHandler.instance=e,this.raster.rasterJobHandler=e,this.renderer&&this.updateRenderer()})).catch((()=>null)),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this.raster.rasterJobHandler=null,this._cachedRendererJson=null}_configDefaultInterpolation(){if(null==this.interpolation){const e=(0,B.In)(this.rasterInfo,this.raster.tileType,this.sourceJSON?.defaultResamplingMethod);this._set("interpolation",e)}}_configDefaultRenderer(){const e=this.raster.rasterInfo;if(this.bandIds||(this.bandIds=(0,B.YD)(e)),!this.renderer){const t=(0,B.Ob)(e,{bandIds:this.bandIds,variableName:(0,o.pC)(this.multidimensionalDefinition)?this.multidimensionalDefinition[0]?.variableName:null});"WCSServer"===this.raster.datasetFormat&&"raster-stretch"===t.type&&(e.statistics?.[0].max>1e24||e.statistics?.[0].min<-1e24)&&(t.dynamicRangeAdjustment=!0,t.statistics=null,"none"===t.stretchType&&(t.stretchType="min-max")),this.renderer=t}this.symbolizer?(this.symbolizer.rendererJSON=(0,B.ol)(this.renderer.toJSON()),this.symbolizer.rasterInfo=e):this.symbolizer=new D.Z({rendererJSON:this.renderer.toJSON(),rasterInfo:e});const t=this.symbolizer.bind();t.success||E.warn("imagery-tile-mixin",t.error||"The given renderer is not supported by the layer.")}};return(0,s._)([(0,u.Cb)()],t.prototype,"_cachedRendererJson",void 0),(0,s._)([(0,u.Cb)()],t.prototype,"_compatibleFullExtent",void 0),(0,s._)([(0,u.Cb)()],t.prototype,"_rasterJobHandler",void 0),(0,s._)([(0,u.Cb)()],t.prototype,"bandIds",void 0),(0,s._)([(0,u.Cb)({json:{origins:{service:{read:{source:"copyrightText"}}}}})],t.prototype,"copyright",void 0),(0,s._)([(0,u.Cb)({type:O.Z,json:{read:!1}}),(0,v.B)("rasterInfo.extent")],t.prototype,"fullExtent",void 0),(0,s._)([(0,u.Cb)()],t.prototype,"interpolation",void 0),(0,s._)([(0,u.Cb)()],t.prototype,"ioConfig",void 0),(0,s._)([(0,u.Cb)({type:[T.Z]})],t.prototype,"multidimensionalDefinition",void 0),(0,s._)([(0,u.Cb)()],t.prototype,"raster",void 0),(0,s._)([(0,u.Cb)({readOnly:!0}),(0,v.B)("raster.rasterInfo")],t.prototype,"rasterInfo",void 0),(0,s._)([(0,u.Cb)()],t.prototype,"sourceJSON",void 0),(0,s._)([(0,u.Cb)({type:z.Z,json:{read:!1}}),(0,v.B)("rasterInfo.spatialReference")],t.prototype,"spatialReference",void 0),(0,s._)([(0,u.Cb)({type:k.Z,json:{read:!1}}),(0,v.B)("rasterInfo.storageInfo.tileInfo")],t.prototype,"tileInfo",void 0),(0,s._)([(0,u.Cb)(C.HQ)],t.prototype,"url",null),(0,s._)([(0,u.Cb)({types:n.dr})],t.prototype,"renderer",null),(0,s._)([(0,u.Cb)()],t.prototype,"symbolizer",void 0),t=(0,s._)([(0,y.j)("esri.layers.ImageryTileMixin")],t),t};var N=i(43330),L=i(18241),Z=i(12478),H=i(95874),W=i(2030),J=i(12512),q=i(73556),j=i(71429),$=i(20613),U=i(82064),G=i(64189),V=i(18486),Y=i(53446);const X=new Map,K=new class{constructor(e=15e3,t=5e3){this._timer=null,this._cachedBlocks=new Map,this._size=-1,this._duration=e,this._interval=Math.min(e,t)}decreaseRefCount(e,t){const i=e+"/"+t,s=this._cachedBlocks;if(s.has(i)){const e=s.get(i);return e.refCount--,e.refCount<=0&&(s.delete(i),e.controller&&e.controller.abort()),e.refCount}return 0}getBlock(e,t){const i=e+"/"+t,s=this._cachedBlocks;if(s.has(i)){const e=s.get(i);return e.ts=Date.now(),e.refCount++,s.delete(i),s.set(i,e),e.block}return null}putBlock(e,t,i,s=null){const r=this._cachedBlocks,n=e+"/"+t;if(r.has(n)){const e=r.get(n);e.ts=Date.now(),e.refCount++}else r.set(n,{block:i,ts:Date.now(),refCount:1,controller:s});this._trim(),this._updateTimer()}deleteBlock(e,t){const i=this._cachedBlocks,s=e+"/"+t;i.has(s)&&i.delete(s)}updateMaxSize(e){this._size=e,this._trim()}empty(){this._cachedBlocks.clear(),this._clearTimer()}getCurrentSize(){return this._cachedBlocks.size}_updateTimer(){if(null!=this._timer)return;const e=this._cachedBlocks;this._timer=setInterval((()=>{const t=Array.from(e),i=Date.now();for(let s=0;s<t.length&&t[s][1].ts<=i-this._duration;s++)e.delete(t[s][0]);0===e.size&&this._clearTimer()}),this._interval)}_trim(){const e=this._cachedBlocks;if(-1===this._size||this._size>=e.size)return;const t=Array.from(e);for(let i=0;i<t.length-this._size;i++)e.delete(t[i][0])}_clearTimer(){null!=this._timer&&(clearInterval(this._timer),this._timer=null)}};function Q(e,t){return null==t?e:`${e}?sliceId=${t}`}function ee(e,t,i){if(!X.has(e))return null==t?K.getBlock(e,i):null;const s=X.get(e);if(null==s[t]){for(let e=0;e<s.length;e++)if(s[e]&&s[e].cache.has(i)){const t=s[e].cache.get(i);return t.refCount++,t.block}return K.getBlock(e,i)}const r=s[t].cache;if(r.has(i)){const e=r.get(i);return e.refCount++,e.block}for(let e=0;e<s.length;e++)if(e!==t&&s[e]&&s[e]&&s[e].cache.has(i)){const t=s[e].cache.get(i);return t.refCount++,r.set(i,t),t.block}return null}function te(e,t,i,s,r=null){if(!X.has(e))return void(null==t&&K.putBlock(e,i,s,r));const n=X.get(e);if(null==n[t])return void K.putBlock(e,i,s,r);const a={refCount:1,block:s,isResolved:!1,isRejected:!1,controller:r};s.then((()=>a.isResolved=!0)).catch((()=>a.isRejected=!0)),n[t].cache.set(i,a)}var ie=i(11931),se=i(31329);let re=class extends((0,G.v)(U.wq)){constructor(){super(...arguments),this.rasterJobHandler=null,this.datasetName=null,this.datasetFormat=null,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}async init(){const e=(0,V.zD)();this.addResolvingPromise(e),await this.when()}normalizeCtorArgs(e){return e&&e.ioConfig&&(e={...e,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:k.Z.create(),...e.ioConfig}}),e}get _isGlobalWrappableSource(){const{rasterInfo:e}=this,t=(0,V.ut)(e.spatialReference);return(0,o.pC)(t)&&e.extent.width>=t/2}set url(e){this._set("url",(0,S.Nm)(e,I.Z.getLogger(this.declaredClass)))}async open(e){throw new a.Z("BaseRaster:open-not-implemented","open() is not implemented")}async fetchTile(e,t,i,s={}){const r=s.tileInfo||this.rasterInfo.storageInfo.tileInfo,n=this.getTileExtentFromTileInfo(e,t,i,r);return this.fetchPixels(n,r.size[0],r.size[1],s)}async identify(e,t={}){const{multidimensionalDefinition:i,timeExtent:s}=t,{hasMultidimensionalTranspose:r,multidimensionalInfo:n}=this.rasterInfo;let{transposedVariableName:a}=t;const l=(0,o.pC)(n)&&r&&(null!=s||(0,P.WU)(i));l&&!a&&(a=(0,o.pC)(i)&&i.length>0?i[0].variableName:n.variables[0].name,t={...t,transposedVariableName:a}),t=this._getRequestOptionsWithSliceId(t);const{spatialReference:c,extent:h}=this.rasterInfo,{datumTransformation:u}=t;let f=(0,V.nF)(e,c,u);if(!h.intersects(f))return{location:f,value:null};if((0,o.pC)(this.rasterInfo.transform)){const e=this.rasterInfo.transform.inverseTransform(f);if(!this.rasterInfo.nativeExtent.intersects(e))return{location:e,value:null};f=e}let d=0;const p=a&&(0,o.pC)(n)&&this.rasterInfo.hasMultidimensionalTranspose;if(!p)if(t.srcResolution)d=(0,V.kr)(t.srcResolution,this.rasterInfo,this.ioConfig.sampling).pyramidLevel;else if(d=await this.computeBestPyramidLevelForLocation(e,t),null==d)return{location:f,value:null};const m=this.identifyPixelLocation(f,d,null,p);if(null===m)return{location:f,value:null};const{row:y,col:g,rowOffset:x,colOffset:b,blockWidth:w}=m,I=a??(0,o.Wg)(t.sliceId),v=Q(this.url,I),_=`${d}/${y}/${g}`;let S=ee(v,null,_);(0,o.Wi)(S)&&(S=this.fetchRawTile(d,y,g,t),te(v,null,_,S));const C=await S;if((0,o.Wi)(C)||!C.pixels?.length)return{location:f,value:null};const T=x*w+b;return this._processIdentifyResult(C,{srcLocation:f,position:T,pyramidLevel:d,useTransposedTile:p,requestSomeSlices:l,identifyOptions:t})}async fetchPixels(e,t,i,s={}){if(e=(0,V.kZ)(e),(s=this._getRequestOptionsWithSliceId(s)).requestRawData)return this._fetchPixels(e,t,i,s);const r=(0,V.ut)(e.spatialReference),n=(0,V.Hq)(e);if((0,o.Wi)(r)||0===n||1===n&&this._isGlobalWrappableSource)return this._fetchPixels(e,t,i,s);if(n>=3)return{extent:e,pixelBlock:null};const a=[],{xmin:l,xmax:c}=e,h=Math.round(r/(c-l)*t),u=h-Math.round((r/2-l)/(c-l)*t);let f=0;const d=[];for(let o=0;o<=n;o++){const p=new O.Z({xmin:0===o?l:-r/2,xmax:o===n?c-r*o:r/2,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference}),m=0===o?h-u:o===n?t-f:h;f+=m,d.push(m);const y=s.disableWrapAround&&o>0?null:this._fetchPixels(p,m,i,s);a.push(y)}const p=(await Promise.all(a)).map((e=>e?.pixelBlock));let m=null;const y={width:t,height:i};return m=this.rasterJobHandler?(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:p,srcMosaicSize:y,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:d},s)).pixelBlock:(0,se.us)(p,y,{blockWidths:d}),{extent:e,srcExtent:(0,V.tB)(e,this.rasterInfo.spatialReference,s.datumTransformation),pixelBlock:m}}async fetchRawPixels(e,t,i,s={}){t={x:Math.floor(t.x),y:Math.floor(t.y)};const r=await this._fetchRawTiles(e,t,i,s),{nativeExtent:n,nativePixelSize:a,storageInfo:l}=this.rasterInfo,c=2**e,h=a.x*c,u=a.y*c,f=new O.Z({xmin:n.xmin+h*t.x,xmax:n.xmin+h*(t.x+i.width-1),ymin:n.ymax-u*(t.y+i.height-1),ymax:n.ymax-u*t.y,spatialReference:n.spatialReference});if(!r)return{extent:f,srcExtent:f,pixelBlock:null};const{pixelBlocks:d,mosaicSize:p}=r;if(1===d.length&&(0,o.pC)(d[0])&&d[0].width===i.width&&d[0].height===i.height)return{extent:f,srcExtent:f,pixelBlock:r.pixelBlocks[0]};const m=e>0?l.pyramidBlockWidth:l.blockWidth,y=e>0?l.pyramidBlockHeight:l.blockHeight,g={x:t.x%m,y:t.y%y};let x;return x=this.rasterJobHandler?(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:d,srcMosaicSize:p,destDimension:i,clipOffset:g,clipSize:i,coefs:null,sampleSpacing:null,interpolation:s.interpolation,alignmentInfo:null,blockWidths:null},s)).pixelBlock:(0,se.us)(d,p,{clipOffset:g,clipSize:i}),{extent:f,srcExtent:f,pixelBlock:x}}fetchRawTile(e,t,i,s){throw new a.Z("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(e){return(0,V.tB)(this.rasterInfo.extent,e)}decodePixelBlock(e,t){return!this.rasterJobHandler||t.useCanvas?(0,ie.J)(e,t):this.rasterJobHandler.decode({data:e,options:t})}async request(e,t,i){const{customFetchParameters:s}=this.ioConfig,{range:r,query:n,headers:a}=t;i=i??t.retryCount??this.ioConfig.retryCount;const o=r?{Range:`bytes=${r.from}-${r.to}`}:null;try{return await(0,w.default)(e,{...t,query:{...n,...s},headers:{...a,...o}})}catch(s){if(i>0)return i--,this.request(e,t,i);throw s}}getSliceIndex(e){const{multidimensionalInfo:t}=this.rasterInfo;return(0,o.Wi)(t)||(0,o.Wi)(e)||0===e.length?null:(0,P.gk)(e,t)}getTileExtentFromTileInfo(e,t,i,s){const r=s.lodAt(e);return this.getTileExtent({x:r.resolution,y:r.resolution},t,i,s.origin,s.spatialReference,s.size)}updateTileInfo(){const{storageInfo:e,spatialReference:t,extent:i,pixelSize:s}=this.rasterInfo;if(!e.tileInfo){const r=[],n=e.maximumPyramidLevel||0;let a=Math.max(s.x,s.y),o=1/.0254*96*a;for(let e=0;e<=n;e++)r.push({level:n-e,resolution:a,scale:o}),a*=2,o*=2;const l=new Y.Z({x:i.xmin,y:i.ymax,spatialReference:t});e.tileInfo=new k.Z({origin:l,size:[e.blockWidth,e.blockHeight],spatialReference:t,lods:r}),e.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(e,t=512,i=512,s){const{width:r,height:n,nativeExtent:a,pixelSize:o,spatialReference:l}=e,c=new Y.Z({x:a.xmin,y:a.ymax,spatialReference:l});null==s&&(s=Math.max(0,Math.round(Math.log(Math.max(r,n))/Math.LN2-8)));const h=this.computeBlockBoundary(a,512,512,{x:a.xmin,y:a.ymax},[o],s);e.storageInfo=new $.Z({blockWidth:t,blockHeight:i,pyramidBlockWidth:t,pyramidBlockHeight:i,origin:c,firstPyramidLevel:1,maximumPyramidLevel:s,blockBoundary:h})}async computeBestPyramidLevelForLocation(e,t={}){return 0}computeBlockBoundary(e,t,i,s,r,n=0,a=2){if(1===r.length&&n>0){r=[...r];let{x:e,y:t}=r[0];for(let i=0;i<n;i++)e*=a,t*=a,r.push({x:e,y:t})}const o=[],{x:l,y:c}=s;for(let s=0;s<r.length;s++){const{x:n,y:a}=r[s];o.push({minCol:Math.floor((e.xmin-l+.1*n)/t/n),maxCol:Math.floor((e.xmax-l-.1*n)/t/n),minRow:Math.floor((c-e.ymax+.1*a)/i/a),maxRow:Math.floor((c-e.ymin-.1*a)/i/a)})}return o}getPyramidPixelSize(e){const{nativePixelSize:t}=this.rasterInfo,{pyramidResolutions:i,pyramidScalingFactor:s}=this.rasterInfo.storageInfo;if(0===e)return t;if((0,o.pC)(i)&&i.length)return i[e-1];const r=s**e;return{x:t.x*r,y:t.y*r}}identifyPixelLocation(e,t,i,s){const{spatialReference:r,nativeExtent:n,storageInfo:a}=this.rasterInfo,{maximumPyramidLevel:l,origin:c,transposeInfo:h}=a,u=s&&(0,o.pC)(h)?h.tileSize[0]:a.blockWidth,f=s&&(0,o.pC)(h)?h.tileSize[1]:a.blockHeight,d=(0,V.nF)(e,r,i);if(!n.intersects(d))return null;if(t<0||t>l)return null;const p=this.getPyramidPixelSize(t),{x:m,y}=p,g=(c.y-d.y)/y/f,x=(d.x-c.x)/m/u,b=Math.min(f-1,Math.floor((g-Math.floor(g))*f)),w=Math.min(u-1,Math.floor((x-Math.floor(x))*u));return{pyramidLevel:t,row:Math.floor(g),col:Math.floor(x),rowOffset:b,colOffset:w,blockWidth:u,srcLocation:d}}getTileExtent(e,t,i,s,r,n){const[a,o]=n,l=s.x+i*a*e.x,c=l+a*e.x,h=s.y-t*o*e.y,u=h-o*e.y;return new O.Z({xmin:l,xmax:c,ymin:u,ymax:h,spatialReference:r})}getBlockWidthHeight(e){return{blockWidth:e>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:e>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(e,t,i){const s=this.rasterInfo.storageInfo.blockBoundary[e];return!s||s.maxRow<t||s.maxCol<i||s.minRow>t||s.minCol>i}async _fetchPixels(e,t,i,s={}){let r=(0,V.Hq)(e);if(r>=2)return{extent:e,pixelBlock:null};const n=this._getSourceDataInfo(e,t,i,s),{pyramidLevel:a,pyramidResolution:l,srcResolution:c,srcExtent:h,srcWidth:u,srcHeight:f}=n;if(0===u||0===f)return{extent:e,srcExtent:h,pixelBlock:null};const d=(0,o.Wg)(this.rasterInfo.transform),p="gcs-shift"===d?.type,m=(0,o.pC)((0,V.ut)(e.spatialReference));!p&&m||(r=(0,V.Hq)(n.srcExtent,p));const y=this.rasterInfo.storageInfo,g={x:Math.floor((h.xmin-y.origin.x)/l.x+.1),y:Math.floor((y.origin.y-h.ymax)/l.y+.1)},x=await this._fetchRawTiles(a,g,{width:u,height:f,wrapCount:r},s);if(!x)return{extent:e,srcExtent:h,pixelBlock:null};const b=a>0?y.pyramidBlockWidth:y.blockWidth,w=a>0?y.pyramidBlockHeight:y.blockHeight,I=b===u&&w===f&&g.x%b==0&&g.y%w==0,v=new Y.Z({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/i,spatialReference:e.spatialReference}),_=!e.spatialReference.equals(this.rasterInfo.spatialReference),{datumTransformation:S}=s;if(!_&&I&&1===x.pixelBlocks.length&&b===t&&w===i&&c.x===v.x&&c.y===v.y)return{extent:e,srcExtent:h,pixelBlock:x.pixelBlocks[0]};const C=m&&(0,o.pC)((0,V.ut)(h.spatialReference)),T=s.requestProjectedLocalDirections&&this.rasterInfo.dataType.startsWith("vector");T&&!this.rasterJobHandler&&await(0,V.zD)();const R=this.rasterJobHandler?await this.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:e,srcBufferExtent:x.extent,pixelSize:v.toJSON(),datumTransformation:S,rasterTransform:d,hasWrapAround:r>0||C,isAdaptive:!1!==this.ioConfig.optimizeProjectionAccuracy,includeGCSGrid:T},s):(0,V.Qp)({projectedExtent:e,srcBufferExtent:x.extent,pixelSize:v,datumTransformation:S,rasterTransform:d,hasWrapAround:r>0||C,isAdaptive:!1,includeGCSGrid:T});let k;const P=!s.requestRawData,B={rows:R.spacing[0],cols:R.spacing[1]},D=(0,o.Wg)(this._getRasterTileAlignmentInfo(a,x.extent.xmin)),{pixelBlocks:F,mosaicSize:O,isPartiallyFilled:z}=x;let E=null;if(this.rasterJobHandler){const e=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:F,srcMosaicSize:O,destDimension:P?{width:t,height:i}:null,coefs:P?R.coefficients:null,sampleSpacing:P?B:null,projectDirections:T,gcsGrid:T?R.gcsGrid:null,isUV:"vector-uv"===this.rasterInfo.dataType,interpolation:s.interpolation,alignmentInfo:D,blockWidths:null},s);({pixelBlock:k,localNorthDirections:E}=e)}else{const e=(0,se.us)(F,O,{alignmentInfo:D});k=P?(0,se.Uk)(e,{width:t,height:i},R.coefficients,B,s.interpolation):e,T&&R.gcsGrid&&(E=(0,se.Qh)({width:t,height:i},R.gcsGrid),k=(0,M.xQ)(k,this.rasterInfo.dataType,E))}return s.requestRawData||T?{srcExtent:h,pixelBlock:k,transformGrid:R,localNorthDirections:E,extent:e,isPartiallyFilled:z}:{srcExtent:h,extent:e,pixelBlock:k}}async _fetchRawTiles(e,t,i,s){const{origin:r,blockBoundary:n}=this.rasterInfo.storageInfo,{blockWidth:a,blockHeight:l}=this.getBlockWidthHeight(e);let{x:c,y:h}=t,{width:u,height:f,wrapCount:d}=i;const p=this._getRasterTileAlignmentInfo(e,0);s.buffer&&(c-=s.buffer.cols,h-=s.buffer.rows,u+=2*s.buffer.cols,f+=2*s.buffer.rows);let m=0,y=0,g=0;d&&(0,o.pC)(p)&&(({worldColumnCountFromOrigin:y,originColumnOffset:g,rightPadding:m}=p),y*p.blockWidth-m>=c+u&&(m=0));const x=Math.floor(c/a),b=Math.floor(h/l),w=Math.floor((c+u+m-1)/a),I=Math.floor((h+f+m-1)/l),v=n[e];if(!v)return null;const{minRow:_,minCol:S,maxCol:C,maxRow:T}=v;if(0===d&&(I<_||w<S||b>T||x>C))return null;const R=new Array;let k=!1;const P=null==this.ioConfig.allowPartialFill?s.allowPartialFill:this.ioConfig.allowPartialFill;for(let t=b;t<=I;t++)for(let i=x;i<=w;i++){let r=i;if(!s.disableWrapAround&&d&&(0,o.pC)(p)&&y<=i&&(r=i-y-g),t>=_&&r>=S&&T>=t&&C>=r){const i=this._fetchRawTile(e,t,r,s);P?R.push(new Promise((e=>{i.then((t=>e(t))).catch((()=>{k=!0,e(null)}))}))):R.push(i)}else R.push(null)}if(0===R.length)return null;const M=await Promise.all(R),B={height:(I-b+1)*l,width:(w-x+1)*a},{spatialReference:D}=this.rasterInfo,F=this.getPyramidPixelSize(e),{x:z,y:E}=F;return{extent:new O.Z({xmin:r.x+x*a*z,xmax:r.x+(w+1)*a*z,ymin:r.y-(I+1)*l*E,ymax:r.y-b*l*E,spatialReference:D}),pixelBlocks:M,mosaicSize:B,isPartiallyFilled:k}}_fetchRawTile(e,t,i,s){const r=this.rasterInfo.storageInfo.blockBoundary[e];if(!r)return Promise.resolve(null);const{minRow:n,minCol:a,maxCol:l,maxRow:h}=r;if(t<n||i<a||t>h||i>l)return Promise.resolve(null);const u=Q(this.url,s.sliceId),f=`${e}/${t}/${i}`;let d=ee(u,s.registryId,f);if((0,o.Wi)(d)){const r=new AbortController;d=this.fetchRawTile(e,t,i,{...s,signal:r.signal}),te(u,s.registryId,f,d,r),d.catch((()=>function(e,t,i){if(!X.has(e))return void(null==t&&K.deleteBlock(e,i));const s=X.get(e);null!=s[t]?s[t].cache.delete(i):K.deleteBlock(e,i)}(u,s.registryId,f)))}return s.signal&&(0,c.fu)(s,(()=>{!function(e,t,i){if(!X.has(e))return null==t?K.decreaseRefCount(e,i):0;const s=X.get(e);if(null==s[t])return K.decreaseRefCount(e,i);const r=s[t].cache;if(r.has(i)){const e=r.get(i);if(e.refCount--,0===e.refCount){r.delete(i);for(let e=0;e<s.length;e++)s[e]&&s[e].cache.has(i)&&s[e].cache.delete(i);e.controller&&e.controller.abort()}e.refCount}}(u,s.registryId,f)})),d}_computeMagDirValues(e){const{bandCount:t,dataType:i}=this.rasterInfo;if((2!==t||"vector-magdir"!==i)&&"vector-uv"!==i||2!==e?.length||!e[0]?.length)return null;const s=e[0].length;if("vector-magdir"===i){const t=e[1].map((e=>(e+360)%360));return[e[0],t]}const[r,n]=e,a=[],o=[];for(let e=0;e<s;e++){const[t,i]=(0,M.Tg)([r[e],n[e]]);a.push(t),o.push(i)}return[a,o]}_getRasterTileAlignmentInfo(e,t){return null==this._rasterTileAlighmentInfo&&(this._rasterTileAlighmentInfo=(0,V.P_)(this.rasterInfo)),(0,o.Wi)(this._rasterTileAlighmentInfo.pyramidsInfo)?null:{startX:t,halfWorldWidth:this._rasterTileAlighmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlighmentInfo.hasGCSSShiftTransform,...this._rasterTileAlighmentInfo.pyramidsInfo[e]}}_getSourceDataInfo(e,t,i,s={}){const r={datumTransformation:s.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0};s.srcResolution&&(r.srcResolution=s.srcResolution,this._updateSourceDataInfo(e,r));const n=this.rasterInfo.storageInfo.maximumPyramidLevel||0,{srcWidth:a,srcHeight:o,pyramidLevel:l}=r,c=a/t,h=o/i,u=l<n&&c*h>=16;if(u||l===n&&(c>8||h>8)||0===a||0===o){const a=new Y.Z({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/i,spatialReference:e.spatialReference});let o=(0,V.VO)(a,this.rasterInfo.spatialReference,e,r.datumTransformation);const f=!o||s.srcResolution&&o.x+o.y<s.srcResolution.x+s.srcResolution.y;if(u&&s.srcResolution&&f){const e=Math.round(Math.log(Math.max(c,h))/Math.LN2)-1;if(n-l+3>=e){const t=2**e;o={x:s.srcResolution.x*t,y:s.srcResolution.y*t}}}o&&(r.srcResolution=o,this._updateSourceDataInfo(e,r))}return(r.srcWidth/t>8||r.srcHeight/i>8)&&(r.srcWidth=0,r.srcHeight=0),r}_updateSourceDataInfo(e,t){t.srcWidth=0,t.srcHeight=0;const i=this.rasterInfo.spatialReference,{srcResolution:s,datumTransformation:r}=t,{pyramidLevel:n,pyramidResolution:a,excessiveReading:l}=(0,V.kr)(s,this.rasterInfo,this.ioConfig.sampling);if(l)return;let c=t.srcExtent||(0,V.tB)(e,i,r);if(null==c)return;const h=(0,o.Wg)(this.rasterInfo.transform);h&&(c=h.inverseTransform(c)),t.srcExtent=c;const u=Math.ceil((c.xmax-c.xmin)/a.x-.1),f=Math.ceil((c.ymax-c.ymin)/a.y-.1);t.pyramidLevel=n,t.pyramidResolution=a,t.srcWidth=u,t.srcHeight=f}_getRequestOptionsWithSliceId(e){return(0,o.pC)(this.rasterInfo.multidimensionalInfo)&&null==e.sliceId&&(e={...e,sliceId:this.getSliceIndex(e.multidimensionalDefinition)}),e}_processIdentifyResult(e,t){const{srcLocation:i,position:s,pyramidLevel:r,useTransposedTile:n}=t,a=e.pixels[0].length/e.width/e.height;if(e.mask&&!e.mask[s])return{location:i,value:null};const{multidimensionalInfo:l}=this.rasterInfo;if((0,o.Wi)(l)||!n){const t=e.pixels.map((e=>e[s])),n={location:i,value:t,pyramidLevel:r},a=this._computeMagDirValues(t.map((e=>[e])));return a?.length&&(n.magdirValue=a.map((e=>e[0]))),n}let c=e.pixels.map((e=>Array.prototype.slice.call(e,s*a,s*a+a))),h=this._computeMagDirValues(c);const{requestSomeSlices:u,identifyOptions:f}=t;let d=(0,P.MO)(l,f.transposedVariableName);if(u){const e=(0,P.Ur)(d,(0,o.Wg)(f.multidimensionalDefinition),(0,o.Wg)(f.timeExtent));c=c.map((t=>e.map((e=>t[e])))),h=h?.map((t=>e.map((e=>t[e])))),d=e.map((e=>d[e]))}return{location:i,value:null,dataSeries:d.map(((e,t)=>{const i={value:c.map((e=>e[t])),multidimensionalDefinition:e.multidimensionalDefinition,variableName:e.multidimensionalDefinition[0].variableName,dimensionValues:{}};return h?.length&&(i.magdirValue=[h[0][t],h[1][t]]),e.multidimensionalDefinition.forEach((e=>i.dimensionValues[e.dimensionName]=e.values[0])),i})),pyramidLevel:r}}};(0,s._)([(0,u.Cb)()],re.prototype,"_rasterTileAlighmentInfo",void 0),(0,s._)([(0,u.Cb)({readOnly:!0})],re.prototype,"_isGlobalWrappableSource",null),(0,s._)([(0,u.Cb)(C.HQ)],re.prototype,"url",null),(0,s._)([(0,u.Cb)({type:String,json:{write:!0}})],re.prototype,"datasetName",void 0),(0,s._)([(0,u.Cb)({type:String,json:{write:!0}})],re.prototype,"datasetFormat",void 0),(0,s._)([(0,u.Cb)()],re.prototype,"rasterInfo",void 0),(0,s._)([(0,u.Cb)()],re.prototype,"ioConfig",void 0),(0,s._)([(0,u.Cb)()],re.prototype,"sourceJSON",void 0),re=(0,s._)([(0,y.j)("esri.layers.support.rasterDatasets.BaseRaster")],re);const ne=re;var ae=i(30979);function oe(e){const t=e.fields,i=e.records,s=t.some((e=>"oid"===e.name.toLowerCase()))?"OBJECTID":"OID",r=[{name:s,type:"esriFieldTypeOID",alias:"OID"}].concat(t.map((e=>({name:e.name,type:"esriFieldType"+e.typeName,alias:e.name})))),n=r.map((e=>e.name)),a=[];let o=0,l=0;return i.forEach((e=>{const t={};for(t[s]=o++,l=1;l<n.length;l++)t[n[l]]=e[l-1];a.push({attributes:t})})),{displayFieldName:"",fields:r,features:a}}class le{static get supportedVersions(){return[5]}static parse(e){const t=new DataView(e),i=3&t.getUint8(0);if(3!==i)return{header:{version:i},recordSet:null};const s=t.getUint32(4,!0),r=t.getUint16(8,!0),n=t.getUint16(10,!0),a={version:i,recordCount:s,headerByteCount:r,recordByteCount:n};let o=32;const l=[],c=[];let h;if(3===i){for(;13!==t.getUint8(o);)h=String.fromCharCode(t.getUint8(o+11)).trim(),l.push({name:(0,ae.f)(new Uint8Array(e,o,11)),type:h,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(h)],length:t.getUint8(o+16)}),o+=32;if(o+=1,l.length>0)for(;c.length<s&&e.byteLength-o>n;){const i=[];32===t.getUint8(o)?(o+=1,l.forEach((t=>{if("C"===t.type)i.push((0,ae.f)(new Uint8Array(e,o,t.length)).trim());else if("N"===t.type)i.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim(),10));else if("F"===t.type)i.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim()));else if("D"===t.type){const s=String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim();i.push(new Date(parseInt(s.substring(0,4),10),parseInt(s.substring(4,6),10)-1,parseInt(s.substring(6,8),10)))}o+=t.length})),c.push(i)):o+=n}}return{header:a,fields:l,records:c,recordSet:oe({fields:l,records:c})}}}var ce=i(78586),he=i(51211);const ue=new Map;ue.set("int16","esriFieldTypeSmallInteger"),ue.set("int32","esriFieldTypeInteger"),ue.set("int64","esriFieldTypeInteger"),ue.set("float32","esriFieldTypeSingle"),ue.set("float64","esriFieldTypeDouble"),ue.set("text","esriFieldTypeString");let fe=class extends ne{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF"}async open(e){await this.init();const{data:t}=await this.request(this.url+"/conf.json",{signal:e?.signal});if(!this._validateHeader(t))throw new a.Z("cloudraster:open","Invalid or unsupported conf.json.");this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{storageInfo:i,rasterInfo:s}=this._parseHeader(t);if("thematic"===s.dataType){const e=await this._fetchAuxiliaryInformation();s.attributeTable=e}this._set("storageInfo",i),this._set("rasterInfo",s),this.ioConfig.retryCount=this.ioConfig.retryCount||0}async fetchRawTile(e,t,i,s={}){const{transposeInfo:r}=this.rasterInfo.storageInfo,{transposedVariableName:n}=s,a=!(!r||!n),o=a?0:this.rasterInfo.storageInfo.maximumPyramidLevel-e;if(o<0)return null;const l=this._buildCacheFilePath(o,t,i,s.multidimensionalDefinition,n),c=this._getIndexRecordFromBundle(t,i,a),h=await this.request(l,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:"array-buffer",signal:s.signal});if(!h)return null;const u=new Uint8Array(h.data),f=this._getTileEndAndContentType(u,c);if(0===f.recordSize)return null;const d=await this.request(l,{range:{from:f.position,to:f.position+f.recordSize},responseType:"array-buffer",signal:s.signal});if(!d)return null;const[p,m]=this._getTileSize(a);return this.decodePixelBlock(d.data,{width:p,height:m,planes:null,pixelType:null,returnPixelInterleavedDims:a})}_validateHeader(e){return e&&"RasterInfo"===e.type&&!["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"].some((t=>!e[t]))}_parseHeader(e){const t=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][e.pixelType],{bandCount:i,histograms:s,colormap:r,blockWidth:n,blockHeight:a,firstPyramidLevel:o,maximumPyramidLevel:l}=e,c=e.statistics&&e.statistics.map((e=>({min:e.min,max:e.max,avg:e.mean,stddev:e.standardDeviation,median:e.median,mode:e.mode}))),h=e.extent.spatialReference,u=e.geodataXform?.spatialReference,f=new z.Z(h?.wkid||h?.wkt?h:u);let d=new O.Z({xmin:e.extent.xmin,ymin:e.extent.ymin,xmax:e.extent.xmax,ymax:e.extent.ymax,spatialReference:f});const p=new Y.Z({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:f}),m=Math.round((d.xmax-d.xmin)/p.x),y=Math.round((d.ymax-d.ymin)/p.y),g=this._parseTransform(e.geodataXform),x=g?d:null;g&&(d=g.forwardTransform(d),p.x=(d.xmax-d.xmin)/m,p.y=(d.ymax-d.ymin)/y);const b=e.properties??{},w=e.format.toLowerCase().replace("cache/",""),I=new Y.Z(e.origin.x,e.origin.y,f);let v,_,S,C;if(r&&r.colors)for(v=[],_=0;_<r.colors.length;_++)S=r.colors[_],C=r.values?r.values[_]:_,v.push([C,255&S,S<<16>>>24,S<<8>>>24,S>>>24]);const T=e.LODInfos,R=[];for(_=0;_<T.levels.length;_++)R.push({level:T.levels[_],resolution:T.resolutions[_],scale:96/.0254*T.resolutions[_]});const P=new k.Z({dpi:96,lods:R,format:w,origin:I,size:[n,a],spatialReference:f}),M={recordSize:8,packetSize:e.packetSize,headerSize:e.packetSize*e.packetSize*8+64},B=[{maxCol:Math.ceil(m/n)-1,maxRow:Math.ceil(y/a)-1,minCol:0,minRow:0}];let D=2;if(l>0)for(_=0;_<l;_++)B.push({maxCol:Math.ceil(m/D/n)-1,maxRow:Math.ceil(y/D/a)-1,minCol:0,minRow:0}),D*=2;const F=e.mdInfo;let E=null;if(F&&b._yxs){const e=b._yxs;E={packetSize:e.PacketSize,tileSize:[e.TileXSize,e.TileYSize]}}return{storageInfo:M,rasterInfo:new j.Z({width:m,height:y,pixelType:t,bandCount:i,extent:d,nativeExtent:x,transform:g,spatialReference:f,pixelSize:p,keyProperties:b,statistics:c,histograms:s,multidimensionalInfo:F,colormap:v,storageInfo:new $.Z({blockWidth:n,blockHeight:a,pyramidBlockWidth:n,pyramidBlockHeight:a,origin:I,tileInfo:P,transposeInfo:E,firstPyramidLevel:o,maximumPyramidLevel:l,blockBoundary:B})})}}_parseTransform(e){if(!(0,ce.j)(e))throw new a.Z("cloudraster:open","the data contains unsupported geodata transform types");const t=(0,ce.c)(e);if("identity"===t.type)return null;if("polynomial"!==t.type||!t.forwardCoefficients?.length||!t.inverseCoefficients?.length)throw new a.Z("cloudraster:open","the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently");return t}async _fetchAuxiliaryInformation(e){const t=this.request(this.url+"/conf.vat.json",{signal:e}).then((e=>e.data)).catch((()=>null)),i=this.request(this.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:e}).then((e=>e.data)).catch((()=>null)),s=await Promise.all([t,i]);let r;if(s[0]){let e=s[0].fields;const t=s[0].values;if(e&&t){e=e.map((e=>({type:"OID"===e.name?"esriFieldTypeOID":ue.get(e.type),name:e.name,alias:e.alias||e.name})));const i=t.map((e=>({attributes:e})));e&&t&&(r={fields:e,features:i})}}return!r&&s[1]&&(r=le.parse(s[1]).recordSet),he.default.fromJSON(r)}_buildCacheFilePath(e,t,i,s,r){const n=this._getPackageSize(!!r),a=Math.floor(t/n)*n,l=Math.floor(i/n)*n,c="R"+this._toHexString4(a)+"C"+this._toHexString4(l);let h="L";h+=e>=10?e.toString():"0"+e.toString();const{multidimensionalInfo:u}=this.rasterInfo,f=s?.[0];if((0,o.Wi)(u)||!f)return`${this.url}/_alllayers/${h}/${c}.bundle`;let d="_yxs";if(!r){d=u.variables.find((e=>e.name===f.variableName)).dimensions[0].values.indexOf(f.values[0]).toString(16);const e=4-d.length;for(let t=0;t<e;t++)d="0"+d;d="S"+d}const p=this._getVariableFolderName(r||f.variableName);return`${this.url}/_alllayers/${p}/${d}/${h}/${c}.bundle`}_getPackageSize(e=!1){const{transposeInfo:t}=this.rasterInfo.storageInfo;return e&&(0,o.pC)(t)?t.packetSize:this.storageInfo.packetSize}_getTileSize(e=!1){const{storageInfo:t}=this.rasterInfo,{transposeInfo:i}=t;return e&&(0,o.pC)(i)?i.tileSize:t.tileInfo.size}_getVariableFolderName(e){return""===(e=e.trim())?"_v":e.replace(/[\{|\}\-]/g,"_").replace("\\*","_v")}_getIndexRecordFromBundle(e,t,i=!1){const s=this._getPackageSize(i),r=s*(e%s)+t%s;if(r<0)throw"Invalid level / row / col";return 20+r*this.storageInfo.recordSize+44}_getTileEndAndContentType(e,t){const i=e.subarray(t,t+8);let s,r=0;for(s=0;s<5;s++)r|=(255&i[s])<<8*s;const n=0xffffffffff&r;for(r=0,s=5;s<8;s++)r|=(255&i[s])<<8*(s-5);return{position:n,recordSize:0xffffffffff&r}}_toHexString4(e){let t=e.toString(16);if(4!==t.length){let e=4-t.length;for(;e-- >0;)t="0"+t}return t}};(0,s._)([(0,u.Cb)({readOnly:!0})],fe.prototype,"storageInfo",void 0),(0,s._)([(0,u.Cb)({type:String,json:{write:!0}})],fe.prototype,"datasetFormat",void 0),fe=(0,s._)([(0,y.j)("esri.layers.support.rasterDatasets.CloudRaster")],fe);const de=fe;var pe=i(18015);let me=class extends ne{constructor(){super(...arguments),this.datasetFormat="MEMORY"}async open(e){await this.init();const{pixelBlock:t,statistics:i,histograms:s,name:r,keyProperties:n,nativeExtent:a,transform:o}=this.data,{width:l,height:c,pixelType:h}=t,u=this.data.extent||new O.Z({xmin:-.5,ymin:.5,xmax:l-.5,ymax:c-.5,spatialReference:new z.Z({wkid:3857})}),f=this.data.isPseudoSpatialReference??!this.data.extent,d={x:u.width/l,y:u.height/c},p=new j.Z({width:l,height:c,pixelType:h,extent:u,nativeExtent:a,transform:o,pixelSize:d,spatialReference:u.spatialReference,bandCount:3,keyProperties:n||{},statistics:i,isPseudoSpatialReference:f,histograms:s});this.createRemoteDatasetStorageInfo(p,512,512),this._set("rasterInfo",p),this.updateTileInfo(),await this._buildInMemoryRaster(t,{width:512,height:512},e),this.datasetName=r,this.url="/InMemory/"+r}fetchRawTile(e,t,i,s={}){const r=this._pixelBlockTiles.get(`${e}/${t}/${i}`);return Promise.resolve(r)}async _buildInMemoryRaster(e,t,i){const s=this.rasterInfo.storageInfo.maximumPyramidLevel,r=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:e,tileSize:t,maximumPyramidLevel:s},i):Promise.resolve((0,se.Vl)(e,t,s)),n=(0,o.pC)(this.rasterInfo.statistics),l=(0,o.pC)(this.rasterInfo.histograms),h=n?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:e},i):Promise.resolve((0,pe.Hv)(e)),u=await(0,c.as)([r,h]);if(!u[0].value&&u[1].value)throw new a.Z("inmemory-raster:open","failed to build in memory raster");this._pixelBlockTiles=u[0].value,n||(this.rasterInfo.statistics=u[1].value?.statistics),l||(this.rasterInfo.histograms=u[1].value?.histograms)}};(0,s._)([(0,u.Cb)({type:String,json:{write:!0}})],me.prototype,"datasetFormat",void 0),(0,s._)([(0,u.Cb)()],me.prototype,"data",void 0),me=(0,s._)([(0,y.j)("esri.layers.support.rasterDatasets.InMemoryRaster")],me);const ye=me;function ge(e,t){if(!e||!t)return[];let i=t;t.includes("/")?(i=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const s=[];if(t){const r=ge(e,i);for(let e=0;e<r.length;e++)ge(r[e],t).forEach((e=>s.push(e)));return s}const r=e.getElementsByTagNameNS("*",i);if(!r||0===r.length)return[];for(let e=0;e<r.length;e++)s.push(r[e]||r.item[e]);return s}function xe(e,t){if(!e||!t)return null;let i=t;t.includes("/")?(i=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const s=ge(e,i);return s.length>0?t?xe(s[0],t):s[0]:null}function be(e,t=null){const i=t?xe(e,t):e;let s;return i?(s=i.textContent||i.nodeValue,s?s.trim():null):null}function we(e,t){return function(e,t){const i=ge(e,t),s=[];let r;for(let e=0;e<i.length;e++)r=i[e].textContent||i[e].nodeValue,r&&(r=r.trim(),""!==r&&s.push(r));return s}(e,t).map((e=>Number(e)))}function Ie(e,t){const i=be(e,t);return Number(i)}function ve(e,t){const i=e?.nodeName?.toLowerCase(),s=t.toLowerCase();return i.slice(i.lastIndexOf(":")+1)===s}var _e=i(35952);function Se(e,t){if(!e||!t)return null;const i=[];for(let s=0;s<e.length;s++)i.push(e[s]),i.push(t[s]);return i}function Ce(e){if(!e)return null;let t=Number(e);if(!isNaN(t)&&0!==t)return new z.Z({wkid:t});if((e=String(e)).startsWith("COMPD_CS")){if(!e.includes("VERTCS")||!e.includes("GEOGCS")&&!e.startsWith("PROJCS"))return null;const i=e.indexOf("VERTCS"),s=e.indexOf("PROJCS"),r=s>-1?s:e.indexOf("GEOGCS");if(-1===r)return null;const n=e.slice(r,e.lastIndexOf("]",i)+1).trim(),a=e.slice(i,e.lastIndexOf("]")).trim();t=Te(n);const o=new z.Z(t?{wkid:t}:{wkt:n}),l=Te(a);return l&&(o.vcsWkid=l),o}return e.startsWith("GEOGCS")||e.startsWith("PROJCS")?(t=Te(e),new z.Z(0!==t?{wkid:t}:{wkt:e})):null}function Te(e){const t=e.replace(/\]/g,"[").replace(/\"/g,"").split("[").map((e=>e.trim())).filter((e=>""!==e)),i=t[t.length-1].split(","),s=i[0]?.toLowerCase();if(("epsg"===s||"esri"===s)&&e.endsWith('"]]')){const e=Number(i[1]);if(!isNaN(e)&&0!==e)return e}return 0}function Re(e){if("pamdataset"!==e?.documentElement.tagName?.toLowerCase())return{};const t={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};e.documentElement.childNodes.forEach((e=>{if(1===e.nodeType)if(ve(e,"SRS")){if(!t.spatialReference){const i=be(e);t.spatialReference=Ce(i)}}else if(ve(e,"Metadata"))if("xml:ESRI"===e.getAttribute("domain")){const{spatialReference:i,transform:s}=function(e){const t=xe(e,"GeodataXform"),i=Ce(Ie(t,"SpatialReference/WKID")||be(t,"SpatialReference/WKT"));if("typens:PolynomialXform"!==t.getAttribute("xsi:type"))return{spatialReference:i,transform:null};const s=Ie(t,"PolynomialOrder")??1,r=we(t,"CoeffX/Double"),n=we(t,"CoeffY/Double"),a=we(t,"InverseCoeffX/Double"),o=we(t,"InverseCoeffY/Double"),l=Se(r,n),c=Se(a,o);return{spatialReference:i,transform:new _e.Z({spatialReference:i,polynomialOrder:s,forwardCoefficients:l,inverseCoefficients:c})}}(e);t.transform=s,t.spatialReference||(t.spatialReference=i)}else ge(e,"MDI").forEach((e=>t.metadata[e.getAttribute("key")]=be(e)));else if(ve(e,"PAMRasterBand")){const i=function(e){const t=Ie(e,"NoDataValue"),i=xe(e,"Histograms/HistItem"),s=Ie(i,"HistMin"),r=Ie(i,"HistMax"),n=Ie(i,"BucketCount"),a=be(i,"HistCounts")?.split("|").map((e=>Number(e)));let o,l,c,h;ge(e,"Metadata/MDI").forEach((e=>{const t=Number(e.textContent??e.nodeValue);switch(e.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":o=t;break;case"STATISTICS_MAXIMUM":l=t;break;case"STATISTICS_MEAN":c=t;break;case"STATISTICS_STDDEV":h=t}}));const u=Ie(e,"Metadata/SourceBandIndex");return{noDataValue:t,histogram:a?.length&&null!=o&&null!=l?{min:s,max:r,size:n||a.length,counts:a}:null,sourceBandIndex:u,statistics:null!=o&&null!=l?{min:o,max:l,avg:c,stddev:h}:null}}(e);null!=i.sourceBandIndex&&null==t.rasterBands[i.sourceBandIndex]?t.rasterBands[i.sourceBandIndex]=i:t.rasterBands.push(i)}}));const i=t.rasterBands;if(i){const e=!!i[0].statistics;t.statistics=e?i.map((e=>e.statistics)):null;const s=!!i[0].histogram;t.histograms=s?i.map((e=>e.histogram)):null}return t}let ke=class extends ne{async open(e){await this.init();const t=await this._fetchData(e);let{spatialReference:i,statistics:s,histograms:r,transform:n}=await this._fetchAuxiliaryData(e);const a=!i;a&&(i=new z.Z({wkid:3857})),r?.length&&null==s&&(s=(0,pe.Oh)(r));const{width:o,height:l}=t;let c=new O.Z({xmin:-.5,ymin:.5-l,xmax:o-.5,ymax:.5,spatialReference:i});const h=n?n.forwardTransform(c):c;let u=!0;if(n){const e=n.forwardCoefficients;u=e&&0===e[1]&&0===e[2],u&&(n=null,c=h)}const f=new ye({data:{extent:h,nativeExtent:c,transform:n,pixelBlock:t,statistics:s,histograms:r,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:a}});await f.open(),f.data=null,this._set("rasterInfo",f.rasterInfo),this._inMemoryRaster=f}fetchRawTile(e,t,i,s={}){return this._inMemoryRaster.fetchRawTile(e,t,i,s)}async _fetchData(e){const{data:t}=await this.request(this.url,{responseType:"array-buffer",signal:e?.signal}),i=(0,ie.y)(t).toUpperCase();if("JPG"!==i&&"PNG"!==i&&"GIF"!==i&&"BMP"!==i)throw new a.Z("image-aux-raster:open","the data is not a supported format");this._set("datasetFormat",i);const s=i.toLowerCase(),r="gif"===s||"bmp"===s||!(0,f.Z)("ios");return await this.decodePixelBlock(t,{format:s,useCanvas:r,hasNoZlibMask:!0})}async _fetchAuxiliaryData(e){const t=(0,o.Wg)(e?.signal),i=this.ioConfig.skipExtensions??[],s=i.includes("aux.xml")?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:t}),r=this.datasetFormat,n="JPG"===r?"jgw":"PNG"===r?"pgw":"BMP"===r?"bpw":null,a=i.includes(n)?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+n,{responseType:"text",signal:t}),l=await(0,c.as)([s,a]);if(t?.aborted)throw(0,c.zE)();const h=Re(l[0].value?.data);if(!h.transform){const e=l[1].value?l[1].value.data.split("\n").slice(0,6).map((e=>Number(e))):null;h.transform=6===e?.length?new _e.Z({forwardCoefficients:[e[4],e[5],e[0],-e[1],e[2],-e[3]]}):null}return h}};(0,s._)([(0,u.Cb)({type:String,json:{write:!0}})],ke.prototype,"datasetFormat",void 0),ke=(0,s._)([(0,y.j)("esri.layers.support.rasterDatasets.ImageAuxRaster")],ke);const Pe=ke;var Me=i(3466),Be=i(58269),De=i(52953),Fe=i(2066),Oe=i(57232);let ze=class extends ne{constructor(){super(...arguments),this._levelOffset=0,this._tilemapCache=null,this._slices=null,this.datasetFormat="RasterTileServer"}async open(e){await this.init();const t=e&&e.signal,i=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:t});i.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const s=i.data;if(this.sourceJSON=s,!s)throw new a.Z("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!s.tileInfo)throw new a.Z("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo(),this.tileType=s.cacheType,null==this.tileType&&(["jpg","jpeg","png","png8","png24","png32","mixed"].includes(s.tileInfo.format.toLowerCase())?this.tileType="Map":"lerc"===s.tileInfo.format.toLowerCase()?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=s.name.slice(s.name.indexOf("/")+1);const r=await this._fetchRasterInfo({signal:t});if(!(0,o.pC)(r))throw new a.Z("image-server-raster:open","cannot initialize image service");{const e="Map"===this.tileType?(0,Be.d)(s.tileInfo,s):k.Z.fromJSON(s.tileInfo),{extent:t,pixelSize:i}=r,n=.5/r.width*i.x;let a,o;const l=e.lodAt(Math.max.apply(null,e.lods.map((e=>e.level))));"Map"!==this.tileType&&0!==s.maxScale&&("Raster"===this.tileType?(a=e.lods.find((e=>e.resolution===i.x)),a||(a=e.lods[e.lods.length-1])):(a=e.lods.find((e=>Math.abs(e.scale-s.maxScale)<n)),a||(a=e.lods.filter((e=>e.scale>s.maxScale)).sort(((e,t)=>e.scale>t.scale?1:-1))[0])),i.x=i.y=a.resolution,r.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),r.height=Math.ceil((t.ymax-t.ymin)/i.y-.1)),a||(a=l);const c=e.lodAt(Math.min.apply(null,e.lods.map((e=>e.level))));"Map"===this.tileType?this._levelOffset=e.lods[0].level:0!==s.minScale&&"Elevation"===this.tileType&&(o=e.lods.find((e=>Math.abs(e.scale-s.minScale)<n)),this._levelOffset=o.level-c.level),o||(o=c);const h=Math.max(i.x,i.y);(Math.abs(i.x-i.y)>n||!e.lods.some((e=>Math.abs(e.resolution-h)<n)))&&(i.x=i.y=a.resolution,r.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),r.height=Math.ceil((t.ymax-t.ymin)/i.y-.1));const u=a.level-o.level,[f,d]=e.size,p=[];e.lods.forEach((e=>{e.level>=o.level&&e.level<=a.level&&p.push({x:e.resolution,y:e.resolution})})),p.sort(((e,t)=>e.x-t.x));const m=this.computeBlockBoundary(t,f,d,e.origin,p,u),y=p.length>1?p.slice(1):null;let g;s.transposeInfo&&(g={tileSize:[s.transposeInfo.rows,s.transposeInfo.cols],packetSize:r.keyProperties?._yxs.PacketSize??0}),r.storageInfo=new $.Z({blockWidth:e.size[0],blockHeight:e.size[1],pyramidBlockWidth:e.size[0],pyramidBlockHeight:e.size[1],pyramidResolutions:y,compression:e.format,origin:e.origin,firstPyramidLevel:1,maximumPyramidLevel:u,tileInfo:e,transposeInfo:g,blockBoundary:m}),this._fixGCSShift(r),this._set("rasterInfo",r)}if(s.capabilities.toLowerCase().includes("tilemap")){const e={tileInfo:r.storageInfo.tileInfo,parsedUrl:(0,Me.mN)(this.url),url:this.url,tileServers:[],type:"tile"};this._tilemapCache=new De.y({layer:e})}}async fetchRawTile(e,t,i,s={}){const{storageInfo:r,extent:n}=this.rasterInfo,{transposeInfo:a}=r,l=(0,o.pC)(a)&&!!s.transposedVariableName;if(this._slices&&!l&&null==s.sliceId)return null;const c=l?0:r.maximumPyramidLevel-e+this._levelOffset,h=`${this.url}/tile/${c}/${t}/${i}`,u=this._slices?l?{variable:s.transposedVariableName}:{sliceId:s.sliceId||0}:null,{data:f}=await this.request(h,{query:u,responseType:"array-buffer",signal:s.signal});if(!f)return null;const d=l?a.tileSize:r.tileInfo.size,p=await this.decodePixelBlock(f,{width:d[0],height:d[1],planes:null,pixelType:null,isPoint:"Elevation"===this.tileType,returnPixelInterleavedDims:l}),m=r.blockBoundary[e];if("jpg"!==r.compression||i>m.minCol&&i<m.maxCol&&t>m.minRow&&t<m.maxRow)return p;const{origin:y,blockWidth:g,blockHeight:x}=r,{x:b,y:w}=this.getPyramidPixelSize(e),I=Math.round((n.xmin-y.x)/b)%g,v=Math.round((n.xmax-y.x)/b)%g||g,_=Math.round((y.y-n.ymax)/w)%x,S=Math.round((y.y-n.ymin)/w)%x||x,C=i===m.minCol?I:0,T=t===m.minRow?_:0,R=i===m.maxCol?v:g,k=t===m.maxRow?S:x;return(0,se.pW)(p,{x:C,y:T},{width:R-C,height:k-T}),p}getSliceIndex(e){if(!this._slices||(0,o.Wi)(e)||0===e.length)return null;const t=e;for(let e=0;e<this._slices.length;e++){const i=this._slices[e].multidimensionalDefinition;if(i.length===t.length&&!i.some((e=>{const i=t.find((t=>e.variableName===t.variableName&&t.dimensionName===e.dimensionName));return!i||(Array.isArray(e.values[0])?`${e.values[0][0]}-${e.values[0][1]}`:e.values[0])!==(Array.isArray(i.values[0])?`${i.values[0][0]}-${i.values[0][1]}`:i.values[0])})))return e}return null}async fetchVariableStatisticsHistograms(e,t){const i=this.request(this.url+"/statistics",{query:{variable:e,f:"json"},signal:t}).then((e=>e.data?.statistics)),s=this.request(this.url+"/histograms",{query:{variable:e,f:"json"},signal:t}).then((e=>e.data?.histograms)),r=await Promise.all([i,s]);return r[0]&&r[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:r[0]||null,histograms:r[1]||null}}async computeBestPyramidLevelForLocation(e,t={}){if(!this._tilemapCache)return 0;let i=this.identifyPixelLocation(e,0,(0,o.Wg)(t.datumTransformation));if(null===i)return null;let s=0;const{maximumPyramidLevel:r}=this.rasterInfo.storageInfo;let n=r-s+this._levelOffset;const a=i.srcLocation;for(;n>=0;){try{if("available"===await this._tilemapCache.fetchAvailability(n,i.row,i.col,t))break}catch{}if(n--,s++,i=this.identifyPixelLocation(a,s,(0,o.Wg)(t.datumTransformation)),null===i)return null}return-1===n||null==i?null:s}async _fetchRasterInfo(e){const t=this.sourceJSON;if("Map"===this.tileType){const e=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),i=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),s=z.Z.fromJSON(t.spatialReference||t.extent.spatialReference),r=new Y.Z({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:s});return new j.Z({width:e,height:i,bandCount:3,extent:O.Z.fromJSON(t.extent),spatialReference:s,pixelSize:r,pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}})}const{signal:i}=e,s=(0,Oe.g)(this.url,this.sourceJSON,{signal:i,query:this.ioConfig.customFetchParameters}),r=t.hasMultidimensions?this.request(`${this.url}/slices`,{query:{f:"json"},signal:i}).then((e=>e.data&&e.data.slices)).catch((()=>null)):null,n=await Promise.all([s,r]);return this._slices=n[1],n[0]}_fixScaleInServiceInfo(){const{sourceJSON:e}=this;e.minScale&&e.minScale<0&&(e.minScale=0),e.maxScale&&e.maxScale<0&&(e.maxScale=0)}_fixGCSShift(e){const{extent:t,spatialReference:i}=e;0===t.xmin&&360===t.xmax&&i.wkid&&i.isGeographic&&(e.nativeExtent=e.extent,e.transform=new Fe.Z,e.extent=e.transform.forwardTransform(t))}};(0,s._)([(0,u.Cb)({type:String,json:{write:!0}})],ze.prototype,"datasetFormat",void 0),(0,s._)([(0,u.Cb)()],ze.prototype,"tileType",void 0),ze=(0,s._)([(0,y.j)("esri.layers.support.rasterDatasets.ImageServerRaster")],ze);const Ee=ze;var Ae=i(34780),Ne=i(32603);const Le=new Map;Le.set("Int8","s8"),Le.set("UInt8","u8"),Le.set("Int16","s16"),Le.set("UInt16","u16"),Le.set("Int32","s32"),Le.set("UInt32","u32"),Le.set("Float32","f32"),Le.set("Float64","f32"),Le.set("Double64","f32");const Ze=new Map;Ze.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),Ze.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),Ze.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),Ze.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});let He=class extends ne{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async open(e){await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const t=e?(0,o.Wg)(e.signal):null,i=await this.request(this.url,{responseType:"xml",signal:t}),{rasterInfo:s,files:r}=this._parseHeader(i.data);if(-1===this.ioConfig.skipExtensions?.indexOf("aux.xml")){const t=await this._fetchAuxiliaryData(e);null!=t&&(s.statistics=t.statistics??s.statistics,s.histograms=t.histograms,t.histograms&&(0,o.Wi)(s.statistics)&&(s.statistics=(0,pe.Oh)(t.histograms)))}this._set("rasterInfo",s),this._files=r;const n=await this.request(r.index,{responseType:"array-buffer",signal:t});this._storageIndex=this._parseIndex(n.data);const{blockWidth:a,blockHeight:l}=this.rasterInfo.storageInfo,c=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:h,height:u}=this.rasterInfo,f=[],d=this._getBandSegmentCount();let p=0,m=-1;for(;p<this._storageIndex.length;){m++;const e=Math.ceil(h/a/c**m)-1,t=Math.ceil(u/l/c**m)-1;p+=(e+1)*(t+1)*d*4,f.push({maxRow:t,maxCol:e,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=f,m>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=m),this.updateTileInfo()}async fetchRawTile(e,t,i,s={}){const{blockWidth:r,blockHeight:n,blockBoundary:a}=this.rasterInfo.storageInfo,l=a[e];if(!l||l.maxRow<t||l.maxCol<i||l.minRow>t||l.minCol>i)return null;const{bandCount:c,pixelType:h}=this.rasterInfo,{ranges:u,actualTileWidth:f,actualTileHeight:d}=this._getTileLocation(e,t,i);if(!u||0===u.length)return null;if(0===u[0].from&&0===u[0].to){const e=new Uint8Array(r*n);return new Ae.Z({width:r,height:n,pixels:null,mask:e,validPixelCount:0})}const{bandIds:p}=this.ioConfig,m=this._getBandSegmentCount(),y=[];let g=0;for(g=0;g<m;g++)(!p||p.indexOf[g]>-1)&&y.push(this.request(this._files.data,{range:{from:u[g].from,to:u[g].to},responseType:"array-buffer",signal:s.signal}));const x=await Promise.all(y),b=x.map((e=>e.data.byteLength)).reduce(((e,t)=>e+t)),w=new Uint8Array(b);let I=0;for(g=0;g<m;g++)w.set(new Uint8Array(x[g].data),I),I+=x[g].data.byteLength;const v=Ze.get(this.rasterInfo.storageInfo.compression).decoderFormat,_=await this.decodePixelBlock(w.buffer,{width:r,height:n,format:v,planes:p?.length||c,pixelType:h});if((0,o.pC)(this.rasterInfo.noDataValue)&&"lerc"!==v&&!_.mask){const e=this.rasterInfo.noDataValue[0];if(null!=e){const t=_.width*_.height,i=new Uint8Array(t);if(Math.abs(e)>1e24)for(g=0;g<t;g++)Math.abs((_.pixels[0][g]-e)/e)>1e-6&&(i[g]=1);else for(g=0;g<t;g++)_.pixels[0][g]!==e&&(i[g]=1);_.mask=i}}let S=0,C=0;if(f!==r||d!==n){let e=_.mask;if(e)for(g=0;g<n;g++)if(C=g*r,g<d)for(S=f;S<r;S++)e[C+S]=0;else for(S=0;S<r;S++)e[C+S]=0;else for(e=new Uint8Array(r*n),_.mask=e,g=0;g<d;g++)for(C=g*r,S=0;S<f;S++)e[C+S]=1}return _}_parseIndex(e){if(e.byteLength%16>0)throw"invalid array buffer must be multiples of 16";let t,i,s,r,n,a;if(Ne.f){for(i=new Uint8Array(e),r=new ArrayBuffer(e.byteLength),s=new Uint8Array(r),n=0;n<e.byteLength/4;n++)for(a=0;a<4;a++)s[4*n+a]=i[4*n+3-a];t=new Uint32Array(r)}else t=new Uint32Array(e);return t}_getBandSegmentCount(){return Ze.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(e,t,i){const{blockWidth:s,blockHeight:r,pyramidScalingFactor:n}=this.rasterInfo.storageInfo,{width:a,height:o}=this.rasterInfo,l=this._getBandSegmentCount();let c,h,u,f=0,d=0;for(u=0;u<e;u++)d=n**u,c=Math.ceil(a/s/d),h=Math.ceil(o/r/d),f+=c*h;d=n**e,c=Math.ceil(a/s/d),h=Math.ceil(o/r/d),f+=t*c+i,f*=4*l;const p=this._storageIndex.subarray(f,f+4*l);let m=0,y=0;const g=[];for(let e=0;e<l;e++)m=p[4*e+0]*2**32+p[4*e+1],y=m+p[4*e+2]*2**32+p[4*e+3],g.push({from:m,to:y});return{ranges:g,actualTileWidth:i<c-1?s:Math.ceil(a/d)-s*(c-1),actualTileHeight:t<h-1?r:Math.ceil(o/d)-r*(h-1)}}_parseHeader(e){const t=xe(e,"MRF_META/Raster");if(!t)throw new a.Z("mrf:open","not a valid MRF format");const i=xe(t,"Size"),s=parseInt(i.getAttribute("x"),10),r=parseInt(i.getAttribute("y"),10),n=parseInt(i.getAttribute("c"),10),o=(be(t,"Compression")||"none").toLowerCase();if(!Ze.has(o))throw new a.Z("mrf:open","currently does not support compression "+o);const l=be(t,"DataType")||"UInt8",c=Le.get(l);if(null==c)throw new a.Z("mrf:open","currently does not support pixel type "+l);const h=xe(t,"PageSize"),u=parseInt(h.getAttribute("x"),10),f=parseInt(h.getAttribute("y"),10),d=xe(t,"DataValues");let p,m;if(d&&(m=d.getAttribute("NoData"),null!=m&&(p=m.trim().split(" ").map((e=>parseFloat(e))))),xe(e,"MRF_META/CachedSource"))throw new a.Z("mrf:open","currently does not support MRF referencing other data files");const y=xe(e,"MRF_META/GeoTags"),g=xe(y,"BoundingBox");let x,b=!1;if(null!=g){const e=parseFloat(g.getAttribute("minx")),t=parseFloat(g.getAttribute("miny")),i=parseFloat(g.getAttribute("maxx")),s=parseFloat(g.getAttribute("maxy")),r=be(y,"Projection")||"";let n;if("LOCAL_CS[]"!==r)if(r.toLowerCase().startsWith("epsg:")){const e=Number(r.slice(5));isNaN(e)||0===e||(n=new z.Z({wkid:e}))}else n=Ce(r);else b=!0,n=new z.Z({wkid:3857});x=new O.Z(e,t,i,s),x.spatialReference=n}else b=!0,x=new O.Z({xmin:-.5,ymin:.5-r,xmax:s-.5,ymax:.5,spatialReference:new z.Z({wkid:3857})});const w=xe(e,"MRF_META/Rsets"),I=parseInt(w&&w.getAttribute("scale")||"2",10),v=x.spatialReference,_=new $.Z({origin:new Y.Z({x:x.xmin,y:x.ymax,spatialReference:v}),blockWidth:u,blockHeight:f,pyramidBlockWidth:u,pyramidBlockHeight:f,compression:o,pyramidScalingFactor:I}),S=new Y.Z({x:x.width/s,y:x.height/r,spatialReference:v}),C=new j.Z({width:s,height:r,extent:x,isPseudoSpatialReference:b,spatialReference:v,bandCount:n,pixelType:c,pixelSize:S,noDataValue:p,storageInfo:_}),T=be(e,"datafile"),R=be(e,"IndexFile");return{rasterInfo:C,files:{mrf:this.url,index:R||this.url.replace(".mrf",".idx"),data:T||this.url.replace(".mrf",Ze.get(o).blobExtension)}}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:e?.signal});return Re(t)}catch{return null}}};(0,s._)([(0,u.Cb)()],He.prototype,"_files",void 0),(0,s._)([(0,u.Cb)()],He.prototype,"_storageIndex",void 0),(0,s._)([(0,u.Cb)({type:String,json:{write:!0}})],He.prototype,"datasetFormat",void 0),He=(0,s._)([(0,y.j)("esri.layers.support.rasterIO.MRFRaster")],He);const We=He;var Je=i(19880),qe=i(11139);const je=(e,t)=>{const i=e.get(t);return i&&i.values},$e=(e,t)=>{const i=e.get(t);return i&&i.values[0]};let Ue=class extends ne{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async open(e){await this.init();const t=e?(0,o.Wg)(e.signal):null,{data:i}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:t});if(!i)throw new a.Z("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{littleEndian:s,firstIFD:r,isBigTiff:n}=(0,Je.cK)(i),l=[];await this._readIFDs(l,i,s,r,0,n?8:4,t);const c=(0,Je.FI)(l),{width:h,height:u,tileWidth:f,tileHeight:d,planes:p,pixelType:m,compression:y,firstPyramidLevel:g,maximumPyramidLevel:x,pyramidBlockWidth:b,pyramidBlockHeight:w,tileBoundary:I,affine:v,metadata:_}=c;let S=Ce(c.extent.spatialReference?.wkt||c.extent.spatialReference?.wkid),C=!1;null==S&&(C=!0,S=new z.Z({wkid:3857}));const T=new O.Z({...c.extent,spatialReference:S}),R=new Y.Z(T?{x:T.xmin,y:T.ymax,spatialReference:S}:{x:0,y:0}),k=new $.Z({blockWidth:f,blockHeight:d,pyramidBlockWidth:b,pyramidBlockHeight:w,compression:y,origin:R,firstPyramidLevel:g,maximumPyramidLevel:x,blockBoundary:I}),P=new Y.Z({x:(T.xmax-T.xmin)/h,y:(T.ymax-T.ymin)/u,spatialReference:S}),M=_?{BandProperties:_.bandProperties,DataType:_.dataType}:{},B=new j.Z({width:h,height:u,bandCount:p,pixelType:m,compression:y,pixelSize:P,storageInfo:k,spatialReference:S,isPseudoSpatialReference:C,keyProperties:M,extent:T,statistics:_?_.statistics:null});if(v?.length&&(B.nativeExtent=new O.Z({xmin:-.5,ymin:.5-u,xmax:h-.5,ymax:.5,spatialReference:S}),B.transform=new _e.Z({polynomialOrder:1,forwardCoefficients:[v[2]+v[0]/2,v[5]-v[3]/2,v[0],v[3],-v[1],-v[4]]}),B.extent=B.transform.forwardTransform(B.nativeExtent),B.pixelSize=new Y.Z({x:(T.xmax-T.xmin)/h,y:(T.ymax-T.ymin)/u,spatialReference:S}),k.origin.x=-.5,k.origin.y=.5),!this.ioConfig.skipExtensions?.includes("aux.xml")){const t=await this._fetchAuxiliaryData(e);if(null!=t){if(B.statistics=t.statistics??B.statistics,B.histograms=t.histograms,t.histograms&&(0,o.Wi)(B.statistics)&&(B.statistics=(0,pe.Oh)(t.histograms)),t.transform&&!v){B.transform=t.transform,B.nativeExtent=B.extent;const e=B.transform.forwardTransform(B.nativeExtent);B.pixelSize=new Y.Z({x:(e.xmax-e.xmin)/h,y:(e.ymax-e.ymin)/u,spatialReference:S}),B.extent=e}B.spatialReference||(B.spatialReference=t.spatialReference)}}if(this._set("rasterInfo",B),this._headerInfo={littleEndian:s,isBigTiff:n,ifds:l,...c},!this._headerInfo.isSupported)throw new a.Z("tiffraster:open","this tiff is not supported: "+this._headerInfo.message);this.updateTileInfo()}async fetchRawTile(e,t,i,s={}){if(!this._headerInfo?.isSupported||this.isBlockOutside(e,t,i))return null;const r=this._getTileLocation(e,t,i);if(!r)return null;const{ranges:n,actualTileWidth:a,actualTileHeight:o,ifd:l}=r,c=n.map((e=>this.request(this.url,{range:e,responseType:"array-buffer",signal:s.signal}))),h=await Promise.all(c),u=h.map((e=>e.data.byteLength)).reduce(((e,t)=>e+t)),f=1===h.length?h[0].data:new ArrayBuffer(u),d=[0],p=[0];if(h.length>1){const e=new Uint8Array(f);for(let t=0,i=0;t<h.length;t++){const s=h[t].data;e.set(new Uint8Array(s),i),d[t]=i,i+=s.byteLength,p[t]=s.byteLength}}const{blockWidth:m,blockHeight:y}=this.getBlockWidthHeight(e),g=await this.decodePixelBlock(f,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:l,offsets:d,sizes:p},width:m,height:y,planes:null,pixelType:null});let x,b,w;if(a!==m||o!==y){let e=g.mask;if(e)for(x=0;x<y;x++)if(w=x*m,x<o)for(b=a;b<m;b++)e[w+b]=0;else for(b=0;b<m;b++)e[w+b]=0;else for(e=new Uint8Array(m*y),g.mask=e,x=0;x<o;x++)for(w=x*m,b=0;b<a;b++)e[w+b]=1}return g}async _readIFDs(e,t,i,s,r,n=4,a){if(!s)return null;(s>=t.byteLength||s<0)&&(t=(await this.request(this.url,{range:{from:s+r,to:s+r+this._bufferSize},responseType:"array-buffer",signal:a})).data,r=s+r,s=0);const o=await this._readIFD(t,i,s,r,qe.Z.TIFF_TAGS,n,a);if(e.push(o.ifd),!o.nextIFD)return null;await this._readIFDs(e,t,i,o.nextIFD-r,r,n,a)}async _readIFD(e,t,i,s,r=qe.Z.TIFF_TAGS,n=4,a){if(!e)return null;const o=(0,Je.vr)(e,t,i,s,r,n);if(o.success){const i=[];if(o.ifd.forEach((e=>{e.values||i.push(e)})),i.length>0){const r=i.map((e=>e.offlineOffsetSize)),n=Math.min.apply(null,r.map((e=>e[0])));if(Math.min.apply(null,r.map((e=>e[0]+e[1])))-n<=this._bufferSize){const{data:r}=await this.request(this.url,{range:{from:n,to:n+this._bufferSize},responseType:"array-buffer",signal:a});e=r,s=n,i.forEach((i=>(0,Je.Dq)(e,t,i,s)))}}if(o.ifd.has("GEOKEYDIRECTORY")){const i=o.ifd.get("GEOKEYDIRECTORY"),r=i.values;if(r&&r.length>4){const n=r[0]+"."+r[1]+"."+r[2],o=await this._readIFD(e,t,i.valueOffset+6-s,s,qe.Z.GEO_KEYS,2,a);i.data=o.ifd,i.data&&i.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[n]})}}return o}if(o.requiredBufferSize&&o.requiredBufferSize!==e.byteLength){const i=await this.request(this.url,{range:{from:s,to:s+o.requiredBufferSize+4},responseType:"array-buffer",signal:a});return(e=i.data).byteLength<o.requiredBufferSize?null:this._readIFD(e,t,0,s,qe.Z.TIFF_TAGS,4,a)}}_getTileLocation(e,t,i){const{firstPyramidLevel:s,blockBoundary:r}=this.rasterInfo.storageInfo,n=0===e?0:e-(s-1),a=this._headerInfo.ifds[n];if(!a)return null;const o=(0,Je.If)(a,this._headerInfo),l=je(a,"TILEOFFSETS");if(void 0===l)return null;const c=je(a,"TILEBYTECOUNTS"),{minRow:h,minCol:u,maxRow:f,maxCol:d}=r[n];if(t>f||i>d||t<h||i<u)return null;const p=$e(a,"IMAGEWIDTH"),m=$e(a,"IMAGELENGTH"),y=$e(a,"TILEWIDTH"),g=$e(a,"TILELENGTH"),x=o?this.rasterInfo.bandCount:1,b=x*t*(d+1)+i,w=[{from:l[b],to:l[b+x-1]+c[b+x-1]-1}];if(o){let e=!0;for(let t=0;t<x;t++)if(l[b+t]+c[b+t]!==l[b+t+1]){e=!1;break}if(!e)for(let e=0;e<x;e++)w[e]={from:l[b+e],to:l[b+e]+c[b+e]-1}}const I=l[b],v=c[b];return null==I||null==v?null:{ranges:w,ifd:a,actualTileWidth:i===d?p%y:y,actualTileHeight:t===f?m%g:g}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:e?.signal});return Re(t)}catch{return null}}};(0,s._)([(0,u.Cb)()],Ue.prototype,"_files",void 0),(0,s._)([(0,u.Cb)()],Ue.prototype,"_headerInfo",void 0),(0,s._)([(0,u.Cb)()],Ue.prototype,"_bufferSize",void 0),(0,s._)([(0,u.Cb)({type:String,json:{write:!0}})],Ue.prototype,"datasetFormat",void 0),Ue=(0,s._)([(0,y.j)("esri.layers.support.rasterDatasets.TIFFRaster")],Ue);const Ge=Ue,Ve=new Map;Ve.set("CRF",{desc:"Cloud Raster Format",constructor:de}),Ve.set("MRF",{desc:"Meta Raster Format",constructor:We}),Ve.set("TIFF",{desc:"GeoTIFF",constructor:Ge}),Ve.set("RasterTileServer",{desc:"Raster Tile Server",constructor:Ee}),Ve.set("JPG",{desc:"JPG Raster Format",constructor:Pe}),Ve.set("PNG",{desc:"PNG Raster Format",constructor:Pe}),Ve.set("GIF",{desc:"GIF Raster Format",constructor:Pe}),Ve.set("BMP",{desc:"BMP Raster Format",constructor:Pe});class Ye{static get supportedFormats(){const e=new Set;return Ve.forEach(((t,i)=>e.add(i))),e}static async open(e){const{url:t,ioConfig:i,sourceJSON:s}=e;let r=e.datasetFormat;null==r&&t.lastIndexOf(".")&&(r=t.slice(t.lastIndexOf(".")+1).toUpperCase()),"OVR"===r||"TIF"===r?r="TIFF":"JPG"!==r&&"JPEG"!==r&&"JFIF"!==r||(r="JPG"),t.toLowerCase().includes("/imageserver")&&!t.toLowerCase().includes("/wcsserver")&&(r="RasterTileServer");const n={url:t,sourceJSON:s,datasetFormat:r,ioConfig:i||{bandIds:null,sampling:null}};let o,l;if(this.supportedFormats.has(r)){if("CRF"===r&&!i.enableCRF)throw new a.Z("rasterfactory:open",`cannot open raster: ${t}`);return o=Ve.get(r).constructor,l=new o(n),await l.open({signal:e.signal}),l}if(r)throw new a.Z("rasterfactory:open","not a supported format "+r);const c=Array.from(Ve.keys());let h=0;const u=()=>(r=c[h++],r&&("CRF"!==r||i.enableCRF)?(o=Ve.get(r).constructor,l=new o(n),l.open({signal:e.signal}).then((()=>l)).catch((()=>u()))):null);return u()}static register(e,t,i){Ve.has(e.toUpperCase())||Ve.set(e.toUpperCase(),{desc:t,constructor:i})}}var Xe=i(10171);let Ke=class extends((0,x.h)((0,H.M)((0,N.q)((0,L.I)((0,b.N)(A((0,W.n)((0,Z.Q)((0,l.R)(g.Z)))))))))){constructor(...e){super(...e),this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.title=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=(0,o.pC)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(c.r9).then((()=>this._openRaster(t)))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){let e=[new J.Z({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"})];const t=this.rasterInfo?.attributeTable?.fields;if(t){const i=t.filter((e=>"oid"!==e.type&&"value"!==e.name.toLowerCase())).map((e=>{const t=e.clone();return t.name="Raster."+e.name,t}));e=e.concat(i)}const i=this.rasterInfo.dataType;if(("vector-magdir"===i||"vector-uv"===i)&&(0,o.pC)(this.rasterInfo.multidimensionalInfo)){const t=this.rasterInfo.multidimensionalInfo.variables[0].unit?.trim(),i="Magnitude"+(t?` (${t})`:"");e.push(new J.Z({name:"Raster.Magnitude",alias:i,domain:null,editable:!1,type:"double"})),e.push(new J.Z({name:"Raster.Direction",alias:"Direction (°)",domain:null,editable:!1,type:"double"}))}return e}set renderer(e){this._set("renderer",e),this.updateRenderer()}readRenderer(e,t,i){const s=t&&t.layerDefinition&&t.layerDefinition.drawingInfo&&t.layerDefinition.drawingInfo.renderer,r=(0,n.ij)(s,i)||void 0;if(null!=r)return r}createPopupTemplate(e){return(0,Xe.eZ)({fields:this.rasterFields,title:this.title},e)}write(e,t){const{raster:i}=this;if(this.loaded?"RasterTileServer"===i.datasetFormat&&("Raster"===i.tileType||"Map"===i.tileType):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(e,t);if(t&&t.messages){const e=`${t.origin}/${t.layerContainerType||"operational-layers"}`;t.messages.push(new a.Z("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`,{layer:this}))}return null}async _openRaster(e){this.raster?(this.raster.rasterInfo||await this.raster.open(),this.url=this.raster.url):this.raster=await Ye.open({url:this.url,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:e});const{rasterInfo:t}=this.raster;if(!t)throw new a.Z("imagery-tile-layer:load","cannot load resources on "+this.url);if(this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,null!=this.sourceJSON){const e="Map"===this.raster.tileType&&null!=this.sourceJSON.minLOD&&null!=this.sourceJSON.maxLOD?this.sourceJSON:{...this.sourceJSON,minScale:0,maxScale:0};this.read(e,{origin:"service"})}null==this.title&&(this.title=this.raster.datasetName),"Map"===this.raster.tileType&&(this.popupEnabled=!1),this._configDefaultSettings(),this.own((0,h.YP)((()=>this.customParameters),(e=>{this.raster.ioConfig.customFetchParameters=e})))}};(0,s._)([(0,u.Cb)({type:[d.z8],json:{write:{overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType||"0,1,2"!==this.bandIds?.join(",")}}}}})],Ke.prototype,"bandIds",void 0),(0,s._)([(0,u.Cb)({json:{write:{overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType||"bilinear"!==this.interpolation}}}}}),(0,p.J)(q.c)],Ke.prototype,"interpolation",void 0),(0,s._)([(0,u.Cb)({json:{write:!0}})],Ke.prototype,"multidimensionalDefinition",void 0),(0,s._)([(0,u.Cb)(C.rn)],Ke.prototype,"legendEnabled",void 0),(0,s._)([(0,u.Cb)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],Ke.prototype,"isReference",void 0),(0,s._)([(0,u.Cb)({type:["show","hide"]})],Ke.prototype,"listMode",void 0),(0,s._)([(0,u.Cb)({json:{read:!0,write:!0}})],Ke.prototype,"blendMode",void 0),(0,s._)([(0,u.Cb)()],Ke.prototype,"sourceJSON",void 0),(0,s._)([(0,u.Cb)({readOnly:!0,json:{origins:{service:{read:{source:"currentVersion"}}}}})],Ke.prototype,"version",void 0),(0,s._)([(0,u.Cb)()],Ke.prototype,"title",void 0),(0,s._)([(0,u.Cb)({readOnly:!0,json:{read:!1}})],Ke.prototype,"type",void 0),(0,s._)([(0,u.Cb)({type:["ArcGISTiledImageServiceLayer"]})],Ke.prototype,"operationalLayerType",void 0),(0,s._)([(0,u.Cb)({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,t)=>!t.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}},writer(e,t,i){t[i]=!e}}}})],Ke.prototype,"popupEnabled",void 0),(0,s._)([(0,u.Cb)({type:r.Z,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}}}}})],Ke.prototype,"popupTemplate",void 0),(0,s._)([(0,u.Cb)({readOnly:!0})],Ke.prototype,"defaultPopupTemplate",null),(0,s._)([(0,u.Cb)({readOnly:!0,type:[J.Z]})],Ke.prototype,"fields",void 0),(0,s._)([(0,u.Cb)({readOnly:!0,type:[J.Z]})],Ke.prototype,"rasterFields",null),(0,s._)([(0,u.Cb)({types:n.dr,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){const e="raster-stretch"===this.renderer?.type&&"none"===this.renderer.stretchType&&!this.renderer.useGamma;return{enabled:!this.loaded||"Raster"===this.raster.tileType||!e}}},origins:{"web-scene":{types:n.FK,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],Ke.prototype,"renderer",null),(0,s._)([(0,m.r)("renderer")],Ke.prototype,"readRenderer",null),Ke=(0,s._)([(0,y.j)("esri.layers.ImageryTileLayer")],Ke);const Qe=Ke},52953:(e,t,i)=>{i.d(t,{y:()=>C});var s,r=i(36663),n=i(66341),a=i(53443),o=i(4745),l=i(70375),c=i(53280),h=i(13802),u=i(55854),f=i(17135),d=i(78668),p=i(76868),m=i(17262),y=i(3466),g=i(81977),x=i(7753),b=(i(39994),i(69236)),w=i(40266),I=i(67134);class v{constructor(){this.location={left:0,top:0,width:0,height:0},this._allAvailability="unknown",this.byteSize=40}getAvailability(e,t){if("unknown"!==this._allAvailability)return this._allAvailability;const i=(e-this.location.top)*this.location.width+(t-this.location.left),s=i%8,r=i>>3,n=this._tileAvailabilityBitSet;return r<0||r>n.length?"unknown":n[r]&1<<s?"available":"unavailable"}_updateFromData(e){const t=this.location.width,i=this.location.height;let s=!0,r=!0;const n=Math.ceil(t*i/8),a=new Uint8Array(n);let o=0;for(let t=0;t<e.length;t++){const i=t%8;e[t]?(r=!1,a[o]|=1<<i):s=!1,7===i&&++o}r?this._allAvailability="unavailable":s?this._allAvailability="available":(this._allAvailability="unknown",this._tileAvailabilityBitSet=a,this.byteSize+=a.length)}static fromDefinition(e,t){const i=e.service.request||n.default,{row:s,col:r,width:a,height:o}=e,c={query:{f:"json"}};return t=t?{...c,...t}:c,i(function(e){let t;if("vector-tile"===e.service.type)t=`${e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`;else{const i=e.service.tileServers;t=`${i&&i.length?i[e.row%i.length]:e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`}const i=e.service.query;return i&&(t=`${t}?${i}`),t}(e),t).then((e=>e.data)).catch((e=>{if(e&&e.details&&422===e.details.httpStatus)return{location:{top:s,left:r,width:a,height:o},valid:!0,data:(0,x.a9)(a*o,0)};throw e})).then((e=>{if(e.location&&(e.location.top!==s||e.location.left!==r||e.location.width!==a||e.location.height!==o))throw new l.Z("tilemap:location-mismatch","Tilemap response for different location than requested",{response:e,definition:{top:s,left:r,width:a,height:o}});return v.fromJSON(e)}))}static fromJSON(e){v._validateJSON(e);const t=new v;return t.location=Object.freeze((0,I.d9)(e.location)),t._updateFromData(e.data),Object.freeze(t)}static _validateJSON(e){if(!e||!e.location)throw new l.Z("tilemap:missing-location","Location missing from tilemap response");if(!1===e.valid)throw new l.Z("tilemap:invalid","Tilemap response was marked as invalid");if(!e.data)throw new l.Z("tilemap:missing-data","Data missing from tilemap response");if(!Array.isArray(e.data))throw new l.Z("tilemap:data-mismatch","Data must be an array of numbers");if(e.data.length!==e.location.width*e.location.height)throw new l.Z("tilemap:data-mismatch","Number of data items does not match width/height of tilemap")}}function _(e){return`${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`}const S=h.Z.getLogger("esri.layers.support.TilemapCache");let C=s=class extends((0,c.p)(a.Z)){constructor(e){super(e),this._pendingTilemapRequests={},this._availableLevels={},this.levels=5,this.cacheByteSize=2*o.Y8.MEGABYTES,this.request=n.default,this._prefetchingEnabled=!0}initialize(){this._tilemapCache=new u.Z(this.cacheByteSize),this.own([(0,p.YP)((()=>{const{layer:e}=this;return[e?.parsedUrl,e?.tileServers,e?.apiKey,e?.customParameters]}),(()=>this._initializeTilemapDefinition())),(0,p.YP)((()=>this.layer?.tileInfo?.lods),(e=>this._initializeAvailableLevels(e)),p.tX)]),this._initializeTilemapDefinition()}castLevels(e){return e<=2?(S.error("Minimum levels for Tilemap is 3, but got ",e),3):e}get size(){return 1<<this.levels}fetchTilemap(e,t,i,s){if(!this._availableLevels[e])return Promise.reject(new l.Z("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`));const r=this._tmpTilemapDefinition,n=this._tilemapFromCache(e,t,i,r);if(n)return Promise.resolve(n);const a=s&&s.signal;return s={...s,signal:null},new Promise(((e,t)=>{(0,d.fu)(a,(()=>t((0,d.zE)())));const i=_(r);let n=this._pendingTilemapRequests[i];if(!n){n=v.fromDefinition(r,s).then((e=>(this._tilemapCache.put(i,e,e.byteSize),e)));const e=()=>delete this._pendingTilemapRequests[i];this._pendingTilemapRequests[i]=n,n.then(e,e)}n.then(e,t)}))}getAvailability(e,t,i){if(!this._availableLevels[e])return"unavailable";const s=this._tilemapFromCache(e,t,i,this._tmpTilemapDefinition);return s?s.getAvailability(t,i):"unknown"}fetchAvailability(e,t,i,s){return this._availableLevels[e]?this.fetchTilemap(e,t,i,s).catch((e=>e)).then((s=>{if(s instanceof v){const r=s.getAvailability(t,i);if("unavailable"===r)throw new l.Z("tile-map:tile-unavailable","Tile is not available",{level:e,row:t,col:i});return r}if((0,d.D_)(s))throw s;return"unknown"})):Promise.reject(new l.Z("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`))}fetchAvailabilityUpsample(e,t,i,s,r){s.level=e,s.row=t,s.col=i;const n=this.layer.tileInfo;n.updateTileInfo(s);const a=this.fetchAvailability(e,t,i,r).catch((e=>{if((0,d.D_)(e))throw e;if(n.upsampleTile(s))return this.fetchAvailabilityUpsample(s.level,s.row,s.col,s);throw e}));return this._fetchAvailabilityUpsamplePrefetch(s.id,e,t,i,r,a),a}async _fetchAvailabilityUpsamplePrefetch(e,t,i,r,n,a){if(!this._prefetchingEnabled)return;const o=`prefetch-${e}`;if(this.handles.has(o))return;const l=new AbortController;a.then((()=>l.abort()),(()=>l.abort()));let c=!1;const h={remove(){c||(c=!0,l.abort())}};if(this.handles.add(h,o),await(0,m.MU)(10,l.signal).catch((()=>{})),c||(c=!0,this.handles.remove(o)),(0,d.Hc)(l))return;const u={id:e,level:t,row:i,col:r},f={...n,signal:l.signal},p=this.layer.tileInfo;for(let e=0;s._prefetches.length<s._maxPrefetch&&p.upsampleTile(u);++e){const e=this.fetchAvailability(u.level,u.row,u.col,f);s._prefetches.push(e);const t=()=>{s._prefetches.removeUnordered(e)};e.then(t,t)}}_initializeTilemapDefinition(){if(!this.layer.parsedUrl)return;const{parsedUrl:e,apiKey:t,customParameters:i}=this.layer;this._tilemapCache.clear(),this._tmpTilemapDefinition={service:{url:e.path,query:(0,y.B7)({...e.query,...i,token:t??e.query?.token}),tileServers:this.layer.tileServers,request:this.request,type:this.layer.type},width:this.size,height:this.size,level:0,row:0,col:0}}_tilemapFromCache(e,t,i,s){s.level=e,s.row=t-t%this.size,s.col=i-i%this.size;const r=_(s);return this._tilemapCache.get(r)}_initializeAvailableLevels(e){this._availableLevels={},e&&e.forEach((e=>this._availableLevels[e.level]=!0))}get test(){const e=this;return{get prefetchingEnabled(){return e._prefetchingEnabled},set prefetchingEnabled(t){e._prefetchingEnabled=t},hasTilemap:(t,i,s)=>!!e._tilemapFromCache(t,i,s,e._tmpTilemapDefinition)}}};C._maxPrefetch=4,C._prefetches=new f.Z({initialSize:s._maxPrefetch}),(0,r._)([(0,g.Cb)({constructOnly:!0,type:Number})],C.prototype,"levels",void 0),(0,r._)([(0,b.p)("levels")],C.prototype,"castLevels",null),(0,r._)([(0,g.Cb)({readOnly:!0,type:Number})],C.prototype,"size",null),(0,r._)([(0,g.Cb)({constructOnly:!0,type:Number})],C.prototype,"cacheByteSize",void 0),(0,r._)([(0,g.Cb)({constructOnly:!0})],C.prototype,"layer",void 0),(0,r._)([(0,g.Cb)({constructOnly:!0})],C.prototype,"request",void 0),C=s=(0,r._)([(0,w.j)("esri.layers.support.TilemapCache")],C)},58269:(e,t,i)=>{i.d(t,{d:()=>n,h:()=>r});var s=i(81590);const r={type:s.Z,json:{origins:{service:{read:{source:["tileInfo","minScale","maxScale","minLOD","maxLOD"],reader:n}}}}};function n(e,t,i,r){if(!e)return null;const{minScale:n,maxScale:a,minLOD:o,maxLOD:l}=t;if(null!=o&&null!=l)return r&&r.ignoreMinMaxLOD?s.Z.fromJSON(e):s.Z.fromJSON({...e,lods:e.lods.filter((({level:e})=>null!=e&&e>=o&&e<=l))});if(0!==n&&0!==a){const t=e=>Math.round(1e4*e)/1e4,i=n?t(n):1/0,r=a?t(a):-1/0;return s.Z.fromJSON({...e,lods:e.lods.filter((e=>{const s=t(e.scale);return s<=i&&s>=r}))})}return s.Z.fromJSON(e)}}}]);